CREATE TABLE "migrations" ("id" integer primary key autoincrement not null, "migration" varchar not null, "batch" integer not null);

CREATE TABLE "password_reset_tokens" ("email" varchar not null, "token" varchar not null, "created_at" datetime, primary key ("email"));

CREATE TABLE "sessions" ("id" varchar not null, "user_id" integer, "ip_address" varchar, "user_agent" text, "payload" text not null, "last_activity" integer not null, primary key ("id"));

CREATE TABLE "cache" ("key" varchar not null, "value" text not null, "expiration" integer not null, primary key ("key"));

CREATE TABLE "cache_locks" ("key" varchar not null, "owner" varchar not null, "expiration" integer not null, primary key ("key"));

CREATE TABLE "jobs" ("id" integer primary key autoincrement not null, "queue" varchar not null, "payload" text not null, "attempts" integer not null, "reserved_at" integer, "available_at" integer not null, "created_at" integer not null);

CREATE TABLE "job_batches" ("id" varchar not null, "name" varchar not null, "total_jobs" integer not null, "pending_jobs" integer not null, "failed_jobs" integer not null, "failed_job_ids" text not null, "options" text, "cancelled_at" integer, "created_at" integer not null, "finished_at" integer, primary key ("id"));

CREATE TABLE "failed_jobs" ("id" integer primary key autoincrement not null, "uuid" varchar not null, "connection" text not null, "queue" text not null, "payload" text not null, "exception" text not null, "failed_at" datetime not null default CURRENT_TIMESTAMP);

CREATE TABLE "settings" ("id" integer primary key autoincrement not null, "group" varchar not null, "name" varchar not null, "locked" tinyint(1) not null default '0', "payload" text not null, "created_at" datetime, "updated_at" datetime);

CREATE TABLE "permissions" ("id" integer primary key autoincrement not null, "name" varchar not null, "guard_name" varchar not null, "created_at" datetime, "updated_at" datetime);

CREATE TABLE "roles" ("id" integer primary key autoincrement not null, "name" varchar not null, "guard_name" varchar not null, "created_at" datetime, "updated_at" datetime);

CREATE TABLE "model_has_permissions" ("permission_id" integer not null, "model_type" varchar not null, "model_id" integer not null, foreign key("permission_id") references "permissions"("id") on delete cascade, primary key ("permission_id", "model_id", "model_type"));

CREATE TABLE "model_has_roles" ("role_id" integer not null, "model_type" varchar not null, "model_id" integer not null, foreign key("role_id") references "roles"("id") on delete cascade, primary key ("role_id", "model_id", "model_type"));

CREATE TABLE "role_has_permissions" ("permission_id" integer not null, "role_id" integer not null, foreign key("permission_id") references "permissions"("id") on delete cascade, foreign key("role_id") references "roles"("id") on delete cascade, primary key ("permission_id", "role_id"));

CREATE TABLE "plugins" ("id" integer primary key autoincrement not null, "name" varchar not null, "author" varchar, "summary" text, "description" text, "latest_version" varchar, "license" varchar, "is_active" tinyint(1) not null default '0', "is_installed" tinyint(1) not null default '0', "sort" integer, "created_at" datetime, "updated_at" datetime);

CREATE TABLE "plugin_dependencies" ("plugin_id" integer not null, "dependency_id" integer not null, foreign key("plugin_id") references "plugins"("id") on delete cascade, foreign key("dependency_id") references "plugins"("id") on delete cascade);

CREATE TABLE "user_invitations" ("id" integer primary key autoincrement not null, "email" varchar not null, "created_at" datetime, "updated_at" datetime);

CREATE TABLE "teams" ("id" integer primary key autoincrement not null, "name" varchar not null, "created_at" datetime, "updated_at" datetime);

CREATE TABLE "user_team" ("user_id" integer not null, "team_id" integer not null, foreign key("user_id") references "users"("id") on delete cascade, foreign key("team_id") references "teams"("id") on delete cascade);

CREATE TABLE "custom_fields" ("id" integer primary key autoincrement not null, "code" varchar not null, "name" varchar not null, "type" varchar not null, "input_type" varchar, "is_multiselect" tinyint(1) not null default '0', "datalist" text, "options" text, "form_settings" text, "use_in_table" tinyint(1) not null default '0', "table_settings" text, "infolist_settings" text, "sort" integer, "customizable_type" varchar not null, "deleted_at" datetime, "created_at" datetime, "updated_at" datetime);

CREATE TABLE "table_views" ("id" integer primary key autoincrement not null, "name" varchar not null, "icon" varchar, "color" varchar, "is_public" tinyint(1) not null default '0', "filters" text, "filterable_type" varchar not null, "user_id" integer not null, "created_at" datetime, "updated_at" datetime, foreign key("user_id") references "users"("id") on delete cascade);

CREATE TABLE "table_view_favorites" ("id" integer primary key autoincrement not null, "is_favorite" tinyint(1) not null default '1', "view_type" varchar not null, "view_key" varchar not null, "filterable_type" varchar not null, "user_id" integer not null, "created_at" datetime, "updated_at" datetime, foreign key("user_id") references "users"("id") on delete cascade);

CREATE TABLE "currencies" ("id" integer primary key autoincrement not null, "name" varchar not null, "symbol" varchar, "iso_numeric" integer, "decimal_places" integer, "full_name" varchar, "rounding" numeric not null default '0', "active" tinyint(1) not null default '1', "created_at" datetime, "updated_at" datetime);

CREATE TABLE "countries" ("id" integer primary key autoincrement not null, "currency_id" integer, "phone_code" varchar, "code" varchar, "name" varchar, "state_required" tinyint(1) not null default '0', "zip_required" tinyint(1) not null default '0', "created_at" datetime, "updated_at" datetime, foreign key("currency_id") references "currencies"("id") on delete set null on update no action);

CREATE TABLE "states" ("id" integer primary key autoincrement not null, "country_id" integer not null, "name" varchar not null, "code" varchar not null, "created_at" datetime, "updated_at" datetime, foreign key("country_id") references "countries"("id") on delete cascade on update no action);

CREATE TABLE "user_allowed_companies" ("id" integer primary key autoincrement not null, "user_id" integer not null, "company_id" integer not null, foreign key("user_id") references "users"("id") on delete cascade, foreign key("company_id") references "companies"("id") on delete cascade);

CREATE TABLE "banks" ("id" integer primary key autoincrement not null, "name" varchar, "code" varchar, "email" varchar, "phone" varchar, "street1" varchar, "street2" varchar, "city" varchar, "zip" varchar, "state_id" integer, "country_id" integer, "creator_id" integer not null, "deleted_at" datetime, "created_at" datetime, "updated_at" datetime, foreign key("state_id") references "states"("id") on delete restrict, foreign key("country_id") references "countries"("id") on delete restrict, foreign key("creator_id") references "users"("id"));

CREATE TABLE "partners_industries" ("id" integer primary key autoincrement not null, "name" varchar not null, "description" text, "is_active" tinyint(1) not null default '1', "creator_id" integer, "deleted_at" datetime, "created_at" datetime, "updated_at" datetime, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "partners_titles" ("id" integer primary key autoincrement not null, "name" varchar not null, "short_name" varchar not null, "creator_id" integer, "created_at" datetime, "updated_at" datetime, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "chatter_followers" ("id" integer primary key autoincrement not null, "followable_type" varchar not null, "followable_id" integer not null, "partner_id" integer, "followed_at" datetime, "created_at" datetime, "updated_at" datetime, foreign key("partner_id") references "partners_partners"("id") on delete cascade);

CREATE TABLE "partners_bank_accounts" ("id" integer primary key autoincrement not null, "account_number" varchar not null, "account_holder_name" varchar not null, "is_active" tinyint(1) not null default '1', "can_send_money" tinyint(1) not null default '0', "creator_id" integer, "partner_id" integer not null, "bank_id" integer not null, "deleted_at" datetime, "created_at" datetime, "updated_at" datetime, foreign key("creator_id") references "users"("id") on delete set null, foreign key("partner_id") references "partners_partners"("id") on delete cascade, foreign key("bank_id") references "banks"("id") on delete cascade);

CREATE TABLE "partners_tags" ("id" integer primary key autoincrement not null, "name" varchar not null, "color" varchar, "creator_id" integer, "deleted_at" datetime, "created_at" datetime, "updated_at" datetime, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "partners_partner_tag" ("tag_id" integer not null, "partner_id" integer not null, foreign key("tag_id") references "partners_tags"("id") on delete cascade, foreign key("partner_id") references "partners_partners"("id") on delete cascade);

CREATE TABLE "activity_types" ("id" integer primary key autoincrement not null, "sort" integer, "delay_count" integer, "delay_unit" varchar not null, "delay_from" varchar not null, "icon" varchar, "decoration_type" varchar, "chaining_type" varchar default 'suggest', "plugin" varchar, "category" varchar, "name" varchar not null, "summary" text, "default_note" text, "is_active" tinyint(1) not null default '1', "keep_done" tinyint(1) not null default '0', "creator_id" integer, "default_user_id" integer, "activity_plan_id" integer, "triggered_next_type_id" integer, "deleted_at" datetime, "created_at" datetime, "updated_at" datetime, foreign key("activity_plan_id") references "activity_plans"("id") on delete cascade, foreign key("creator_id") references "users"("id") on delete set null, foreign key("default_user_id") references "users"("id") on delete set null, foreign key("triggered_next_type_id") references "activity_types"("id") on delete restrict);

CREATE TABLE "activity_plan_templates" ("id" integer primary key autoincrement not null, "sort" integer, "plan_id" integer not null, "activity_type_id" integer not null, "responsible_id" integer, "creator_id" integer, "delay_count" integer, "delay_unit" varchar not null, "delay_from" varchar not null, "summary" text, "responsible_type" varchar not null, "note" text, "created_at" datetime, "updated_at" datetime, foreign key("plan_id") references "activity_plans"("id") on delete cascade, foreign key("activity_type_id") references "activity_types"("id") on delete restrict, foreign key("responsible_id") references "users"("id") on delete set null, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "users" ("id" integer primary key autoincrement not null, "name" varchar not null, "email" varchar not null, "email_verified_at" datetime, "language" varchar, "is_active" tinyint(1) not null default ('1'), "password" varchar not null, "remember_token" varchar, "deleted_at" datetime, "created_at" datetime, "updated_at" datetime, "resource_permission" varchar not null default ('individual'), "default_company_id" integer, "partner_id" integer, foreign key("default_company_id") references companies("id") on delete restrict on update no action, foreign key("partner_id") references "partners_partners"("id") on delete restrict);

CREATE TABLE "activity_type_suggestions" ("activity_type_id" integer not null, "suggested_activity_type_id" integer not null, foreign key("activity_type_id") references "activity_types"("id") on delete cascade, foreign key("suggested_activity_type_id") references "activity_types"("id") on delete cascade);

CREATE TABLE "chatter_messages" ("id" integer primary key autoincrement not null, "company_id" integer, "activity_type_id" integer, "assigned_to" integer, "messageable_type" varchar not null, "messageable_id" integer not null, "type" varchar, "name" varchar, "subject" varchar, "body" text, "summary" text, "is_internal" tinyint(1), "date_deadline" date, "pinned_at" date, "log_name" varchar, "causer_type" varchar not null, "causer_id" integer not null, "event" varchar, "properties" text, "created_at" datetime, "updated_at" datetime, "is_read" tinyint(1) not null default '0', foreign key("company_id") references "companies"("id") on delete cascade, foreign key("activity_type_id") references "activity_types"("id") on delete cascade, foreign key("assigned_to") references "users"("id") on delete cascade);

CREATE TABLE "chatter_attachments" ("id" integer primary key autoincrement not null, "company_id" integer, "creator_id" integer, "message_id" integer, "file_size" varchar, "name" varchar, "messageable_type" varchar not null, "messageable_id" integer not null, "file_path" varchar, "original_file_name" varchar, "mime_type" varchar, "created_at" datetime, "updated_at" datetime, foreign key("company_id") references "companies"("id") on delete cascade, foreign key("creator_id") references "users"("id") on delete cascade, foreign key("message_id") references "chatter_messages"("id") on delete cascade);

CREATE TABLE "email_logs" ("id" integer primary key autoincrement not null, "recipient_email" varchar not null, "recipient_name" varchar not null, "subject" varchar not null, "status" varchar not null, "error_message" text, "sent_at" datetime not null, "created_at" datetime, "updated_at" datetime);

CREATE TABLE "unit_of_measure_categories" ("id" integer primary key autoincrement not null, "name" varchar not null, "creator_id" integer, "created_at" datetime, "updated_at" datetime, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "unit_of_measures" ("id" integer primary key autoincrement not null, "type" varchar not null, "name" varchar not null, "factor" numeric default '0', "rounding" numeric default '0', "category_id" integer not null, "creator_id" integer, "deleted_at" datetime, "created_at" datetime, "updated_at" datetime, foreign key("category_id") references "unit_of_measure_categories"("id") on delete restrict, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "utm_mediums" ("id" integer primary key autoincrement not null, "creator_id" integer, "name" varchar not null, "created_at" datetime, "updated_at" datetime, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "utm_sources" ("id" integer primary key autoincrement not null, "creator_id" integer, "name" varchar not null, "created_at" datetime, "updated_at" datetime, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "utm_stages" ("id" integer primary key autoincrement not null, "sort" integer, "name" varchar not null, "created_by" integer, "created_at" datetime, "updated_at" datetime, foreign key("created_by") references "users"("id") on delete set null);

CREATE TABLE "utm_campaigns" ("id" integer primary key autoincrement not null, "user_id" integer, "stage_id" integer not null, "color" varchar, "created_by" integer, "name" varchar not null, "title" varchar not null, "is_active" tinyint(1) not null default '0', "is_auto_campaign" tinyint(1) not null default '0', "company_id" integer, "created_at" datetime, "updated_at" datetime, foreign key("user_id") references "users"("id") on delete restrict, foreign key("stage_id") references "utm_stages"("id") on delete restrict, foreign key("created_by") references "users"("id") on delete set null, foreign key("company_id") references "companies"("id") on delete set null);

CREATE TABLE "companies" ("id" integer primary key autoincrement not null, "parent_id" integer, "currency_id" integer, "creator_id" integer, "sort" integer, "name" varchar not null, "company_id" varchar, "tax_id" varchar, "registration_number" varchar, "email" varchar, "phone" varchar, "mobile" varchar, "website" varchar, "color" varchar, "is_active" tinyint(1) not null default ('1'), "founded_date" date, "deleted_at" datetime, "created_at" datetime, "updated_at" datetime, "partner_id" integer not null, "street1" varchar, "street2" varchar, "city" varchar, "zip" varchar, "state_id" integer, "country_id" integer, foreign key("country_id") references countries("id") on delete restrict on update no action, foreign key("state_id") references states("id") on delete restrict on update no action, foreign key("creator_id") references users("id") on delete set null on update no action, foreign key("currency_id") references currencies("id") on delete set null on update no action, foreign key("parent_id") references companies("id") on delete cascade on update no action, foreign key("partner_id") references partners_partners("id") on delete restrict on update no action);

CREATE TABLE "pages" ("id" integer primary key autoincrement not null, "title" varchar not null, "slug" varchar not null, "layout" varchar not null default 'default', "blocks" text not null, "parent_id" integer, "created_at" datetime, "updated_at" datetime, foreign key("parent_id") references "pages"("id") on delete cascade on update cascade);

CREATE TABLE "media" ("id" integer primary key autoincrement not null, "disk" varchar not null default 'public', "directory" varchar not null default 'media', "visibility" varchar not null default 'public', "name" varchar not null, "path" varchar not null, "width" integer, "height" integer, "size" integer, "type" varchar not null default 'image', "ext" varchar not null, "alt" varchar, "title" varchar, "description" text, "caption" text, "exif" text, "curations" text, "created_at" datetime, "updated_at" datetime, "tenant_id" integer);

CREATE TABLE "products_categories" ("id" integer primary key autoincrement not null, "name" varchar not null, "full_name" varchar, "parent_path" varchar, "parent_id" integer, "creator_id" integer, "created_at" datetime, "updated_at" datetime, "product_properties_definition" text, foreign key("parent_id") references "products_categories"("id") on delete cascade, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "products_tags" ("id" integer primary key autoincrement not null, "name" varchar not null, "color" varchar, "creator_id" integer, "deleted_at" datetime, "created_at" datetime, "updated_at" datetime, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "products_product_tag" ("tag_id" integer not null, "product_id" integer not null, foreign key("tag_id") references "products_tags"("id") on delete cascade, foreign key("product_id") references "products_products"("id") on delete cascade);

CREATE TABLE "products_attributes" ("id" integer primary key autoincrement not null, "name" varchar not null, "type" varchar not null, "sort" integer, "creator_id" integer, "deleted_at" datetime, "created_at" datetime, "updated_at" datetime, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "products_attribute_options" ("id" integer primary key autoincrement not null, "name" varchar not null, "color" varchar, "extra_price" numeric, "sort" integer, "attribute_id" integer not null, "creator_id" integer, "created_at" datetime, "updated_at" datetime, foreign key("attribute_id") references "products_attributes"("id") on delete cascade, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "products_product_attributes" ("id" integer primary key autoincrement not null, "sort" integer, "product_id" integer not null, "attribute_id" integer not null, "creator_id" integer, "created_at" datetime, "updated_at" datetime, foreign key("product_id") references "products_products"("id") on delete cascade, foreign key("attribute_id") references "products_attributes"("id") on delete cascade, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "products_product_attribute_values" ("id" integer primary key autoincrement not null, "extra_price" numeric, "product_id" integer, "attribute_id" integer, "product_attribute_id" integer not null, "attribute_option_id" integer not null, foreign key("product_id") references "products_products"("id") on delete cascade, foreign key("attribute_id") references "products_attributes"("id") on delete cascade, foreign key("product_attribute_id") references "products_product_attributes"("id") on delete cascade, foreign key("attribute_option_id") references "products_attribute_options"("id") on delete cascade);

CREATE TABLE "products_price_rules" ("id" integer primary key autoincrement not null, "name" varchar not null, "sort" integer, "currency_id" integer not null, "company_id" integer, "creator_id" integer, "deleted_at" datetime, "created_at" datetime, "updated_at" datetime, foreign key("currency_id") references "currencies"("id") on delete restrict, foreign key("company_id") references "companies"("id") on delete set null, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "products_price_rule_items" ("id" integer primary key autoincrement not null, "apply_to" varchar not null, "display_apply_to" varchar not null, "base" varchar not null, "type" varchar not null, "min_quantity" numeric default '0', "fixed_price" numeric default '0', "price_discount" numeric default '0', "price_round" numeric default '0', "price_surcharge" numeric default '0', "price_markup" numeric default '0', "price_min_margin" numeric default '0', "percent_price" numeric default '0', "starts_at" datetime, "ends_at" datetime, "price_rule_id" integer not null, "base_price_rule_id" integer, "product_id" integer not null, "category_id" integer not null, "currency_id" integer, "company_id" integer, "creator_id" integer, "created_at" datetime, "updated_at" datetime, foreign key("price_rule_id") references "products_price_rules"("id") on delete cascade, foreign key("base_price_rule_id") references "products_price_rules"("id") on delete set null, foreign key("product_id") references "products_products"("id") on delete cascade, foreign key("category_id") references "products_categories"("id") on delete cascade, foreign key("currency_id") references "currencies"("id") on delete set null, foreign key("company_id") references "companies"("id") on delete set null, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "products_product_suppliers" ("id" integer primary key autoincrement not null, "sort" integer, "delay" integer not null default '0', "product_name" varchar, "product_code" varchar, "starts_at" date, "ends_at" date, "min_qty" numeric not null default '0', "price" numeric not null default '0', "discount" numeric not null default '0', "product_id" integer, "partner_id" integer not null, "currency_id" integer not null, "company_id" integer, "creator_id" integer, "created_at" datetime, "updated_at" datetime, foreign key("product_id") references "products_products"("id") on delete set null, foreign key("partner_id") references "partners_partners"("id") on delete cascade, foreign key("currency_id") references "currencies"("id") on delete restrict, foreign key("company_id") references "companies"("id") on delete set null, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "products_product_price_lists" ("id" integer primary key autoincrement not null, "sort" integer, "currency_id" integer not null, "company_id" integer, "creator_id" integer, "name" varchar not null, "is_active" tinyint(1) not null default '1', "created_at" datetime, "updated_at" datetime, foreign key("currency_id") references "currencies"("id") on delete restrict, foreign key("company_id") references "companies"("id") on delete set null, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "products_product_combinations" ("id" integer primary key autoincrement not null, "product_id" integer not null, "product_attribute_value_id" integer not null, "created_at" datetime, "updated_at" datetime, foreign key("product_id") references "products_products"("id") on delete cascade, foreign key("product_attribute_value_id") references "products_product_attribute_values"("id") on delete cascade);

CREATE TABLE "accounts_payment_terms" ("id" integer primary key autoincrement not null, "company_id" integer, "sort" integer, "discount_days" integer, "creator_id" integer, "early_pay_discount" varchar, "name" varchar not null, "note" varchar, "display_on_invoice" tinyint(1) default '0', "early_discount" tinyint(1) default '0', "discount_percentage" numeric default '0', "deleted_at" datetime, "created_at" datetime, "updated_at" datetime, foreign key("company_id") references "companies"("id") on delete set null, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "accounts_payment_due_terms" ("id" integer primary key autoincrement not null, "nb_days" integer, "payment_id" integer, "creator_id" integer, "value" varchar not null, "delay_type" varchar not null, "days_next_month" varchar, "value_amount" numeric default '0', "created_at" datetime, "updated_at" datetime, foreign key("payment_id") references "accounts_payment_terms"("id") on delete cascade, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "accounts_incoterms" ("id" integer primary key autoincrement not null, "creator_id" integer, "code" varchar not null, "name" varchar not null, "deleted_at" datetime, "created_at" datetime, "updated_at" datetime, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "accounts_tax_groups" ("id" integer primary key autoincrement not null, "sort" integer, "company_id" integer, "country_id" integer, "creator_id" integer, "name" varchar not null, "preceding_subtotal" varchar, "created_at" datetime, "updated_at" datetime, foreign key("company_id") references "companies"("id") on delete restrict, foreign key("country_id") references "countries"("id") on delete set null, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "accounts_accounts" ("id" integer primary key autoincrement not null, "currency_id" integer, "creator_id" integer, "account_type" varchar not null, "name" varchar not null, "code" varchar, "note" varchar, "deprecated" tinyint(1), "reconcile" tinyint(1), "non_trade" tinyint(1), "created_at" datetime, "updated_at" datetime, foreign key("currency_id") references "currencies"("id") on delete set null, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "accounts_account_tags" ("id" integer primary key autoincrement not null, "color" varchar, "country_id" integer, "creator_id" integer, "applicability" varchar not null, "name" varchar not null, "tax_negate" tinyint(1) not null default '0', "created_at" datetime, "updated_at" datetime, foreign key("country_id") references "countries"("id") on delete set null, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "accounts_taxes" ("id" integer primary key autoincrement not null, "sort" integer, "company_id" integer not null, "tax_group_id" integer not null, "cash_basis_transition_account_id" integer, "country_id" integer, "creator_id" integer, "type_tax_use" varchar not null, "tax_scope" varchar, "formula" varchar, "amount_type" varchar not null, "price_include_override" varchar, "tax_exigibility" varchar, "name" varchar, "description" varchar, "invoice_label" varchar, "invoice_legal_notes" text, "amount" numeric default '0', "is_active" tinyint(1) default '0', "include_base_amount" tinyint(1) default '0', "is_base_affected" tinyint(1) default '0', "analytic" tinyint(1) default '0', "created_at" datetime, "updated_at" datetime, foreign key("company_id") references "companies"("id") on delete restrict, foreign key("tax_group_id") references "accounts_tax_groups"("id") on delete restrict, foreign key("cash_basis_transition_account_id") references "accounts_accounts"("id") on delete set null, foreign key("country_id") references "countries"("id") on delete set null, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "accounts_tax_partition_lines" ("id" integer primary key autoincrement not null, "account_id" integer, "tax_id" integer, "company_id" integer, "creator_id" integer, "sort" integer, "repartition_type" varchar not null, "document_type" varchar not null, "use_in_tax_closing" varchar, "factor" numeric default '0', "factor_percent" numeric default '0', "created_at" datetime, "updated_at" datetime, foreign key("account_id") references "accounts_accounts"("id") on delete set null, foreign key("tax_id") references "accounts_taxes"("id") on delete cascade, foreign key("company_id") references "companies"("id") on delete set null, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "accounts_journals" ("id" integer primary key autoincrement not null, "default_account_id" integer, "suspense_account_id" integer, "sort" integer, "currency_id" integer, "company_id" integer, "profit_account_id" integer, "loss_account_id" integer, "bank_account_id" integer, "creator_id" integer, "color" varchar, "access_token" varchar, "code" varchar, "type" varchar not null, "invoice_reference_type" varchar not null, "invoice_reference_model" varchar not null, "bank_statements_source" varchar, "name" varchar not null, "order_override_regex" text, "auto_check_on_post" tinyint(1) default '0', "restrict_mode_hash_table" tinyint(1) default '0', "refund_order" tinyint(1) default '0', "payment_order" tinyint(1) default '0', "show_on_dashboard" tinyint(1) default '0', "created_at" datetime, "updated_at" datetime, foreign key("default_account_id") references "accounts_accounts"("id") on delete restrict, foreign key("suspense_account_id") references "accounts_accounts"("id") on delete restrict, foreign key("currency_id") references "currencies"("id") on delete set null, foreign key("company_id") references "companies"("id") on delete restrict, foreign key("profit_account_id") references "accounts_accounts"("id") on delete set null, foreign key("loss_account_id") references "accounts_accounts"("id") on delete set null, foreign key("bank_account_id") references "banks"("id") on delete restrict, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "accounts_journal_accounts" ("journal_id" integer not null, "account_id" integer not null, foreign key("journal_id") references "accounts_journals"("id") on delete cascade, foreign key("account_id") references "accounts_accounts"("id") on delete cascade);

CREATE TABLE "accounts_tax_taxes" ("parent_tax_id" integer not null, "child_tax_id" integer not null, foreign key("parent_tax_id") references "accounts_taxes"("id") on delete cascade, foreign key("child_tax_id") references "accounts_taxes"("id") on delete cascade);

CREATE TABLE "accounts_account_taxes" ("account_id" integer not null, "tax_id" integer not null, foreign key("account_id") references "accounts_accounts"("id") on delete cascade, foreign key("tax_id") references "accounts_taxes"("id") on delete cascade);

CREATE TABLE "accounts_account_account_tags" ("account_id" integer not null, "account_tag_id" integer not null, foreign key("account_id") references "accounts_accounts"("id") on delete cascade, foreign key("account_tag_id") references "accounts_account_tags"("id") on delete cascade);

CREATE TABLE "accounts_account_journals" ("account_id" integer not null, "journal_id" integer not null, foreign key("account_id") references "accounts_accounts"("id") on delete cascade, foreign key("journal_id") references "accounts_journals"("id") on delete cascade);

CREATE TABLE "accounts_fiscal_positions" ("id" integer primary key autoincrement not null, "sort" integer, "company_id" integer not null, "country_id" integer, "country_group_id" integer, "creator_id" integer, "zip_from" varchar, "zip_to" varchar, "foreign_vat" varchar, "name" varchar not null, "notes" text, "auto_reply" tinyint(1) not null default '0', "vat_required" tinyint(1) not null default '0', "created_at" datetime, "updated_at" datetime, foreign key("company_id") references "companies"("id") on delete restrict, foreign key("country_id") references "countries"("id") on delete set null, foreign key("country_group_id") references "countries"("id") on delete set null, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "accounts_fiscal_position_taxes" ("id" integer primary key autoincrement not null, "fiscal_position_id" integer not null, "company_id" integer, "tax_source_id" integer not null, "tax_destination_id" integer, "creator_id" integer, "created_at" datetime, "updated_at" datetime, foreign key("fiscal_position_id") references "accounts_fiscal_positions"("id") on delete cascade, foreign key("company_id") references "companies"("id") on delete set null, foreign key("tax_source_id") references "accounts_taxes"("id") on delete restrict, foreign key("tax_destination_id") references "accounts_taxes"("id") on delete set null, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "accounts_cash_roundings" ("id" integer primary key autoincrement not null, "creator_id" integer, "strategy" varchar not null, "rounding_method" varchar not null, "name" varchar not null, "rounding" numeric not null default '0', "profit_account_id" integer, "loss_account_id" integer, "created_at" datetime, "updated_at" datetime, foreign key("creator_id") references "users"("id") on delete set null, foreign key("profit_account_id") references "accounts_accounts"("id") on delete set null, foreign key("loss_account_id") references "accounts_accounts"("id") on delete set null);

CREATE TABLE "accounts_product_taxes" ("product_id" integer not null, "tax_id" integer not null, foreign key("product_id") references "products_products"("id") on delete cascade, foreign key("tax_id") references "accounts_taxes"("id") on delete cascade);

CREATE TABLE "accounts_product_supplier_taxes" ("product_id" integer not null, "tax_id" integer not null, foreign key("product_id") references "products_products"("id") on delete cascade, foreign key("tax_id") references "accounts_taxes"("id") on delete cascade);

CREATE TABLE "accounts_reconciles" ("id" integer primary key autoincrement not null, "sort" integer, "company_id" integer not null, "past_months_limit" integer, "created_by" integer, "rule_type" varchar not null, "matching_order" varchar not null, "counter_part_type" varchar, "match_nature" varchar, "match_amount" varchar, "match_label" varchar, "match_level_parameters" varchar, "match_note" varchar, "match_note_parameters" varchar, "match_transaction_type" varchar, "match_transaction_type_parameters" varchar, "payment_tolerance_type" varchar, "decimal_separator" varchar, "name" varchar not null, "auto_reconcile" tinyint(1) not null, "to_check" tinyint(1) not null default '0', "match_text_location_label" tinyint(1) not null default '0', "match_text_location_note" tinyint(1) not null default '0', "match_text_location_reference" tinyint(1) not null default '0', "match_same_currency" tinyint(1) not null default '0', "allow_payment_tolerance" tinyint(1) not null default '0', "match_partner" tinyint(1) not null default '0', "match_amount_min" numeric, "match_amount_max" numeric, "payment_tolerance_parameters" numeric, "created_at" datetime, "updated_at" datetime, foreign key("company_id") references "companies"("id") on delete restrict, foreign key("created_by") references "users"("id") on delete set null);

CREATE TABLE "accounts_payment_methods" ("id" integer primary key autoincrement not null, "code" varchar not null, "payment_type" varchar not null, "name" varchar not null, "created_by" integer, "created_at" datetime, "updated_at" datetime, foreign key("created_by") references "users"("id"));

CREATE TABLE "accounts_payment_method_lines" ("id" integer primary key autoincrement not null, "sort" integer, "payment_method_id" integer, "payment_account_id" integer, "journal_id" integer, "creator_id" integer, "name" varchar, "created_at" datetime, "updated_at" datetime, foreign key("payment_method_id") references "accounts_payment_methods"("id") on delete restrict, foreign key("payment_account_id") references "accounts_accounts"("id") on delete restrict, foreign key("journal_id") references "accounts_journals"("id") on delete restrict, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "accounts_bank_statements" ("id" integer primary key autoincrement not null, "company_id" integer, "journal_id" integer, "created_by" integer, "name" varchar, "reference" varchar, "first_line_index" varchar, "date" date, "balance_start" numeric not null default '0', "balance_end" numeric not null default '0', "balance_end_real" numeric not null default '0', "is_completed" tinyint(1) not null default '0', "created_at" datetime, "updated_at" datetime, foreign key("company_id") references "companies"("id") on delete set null, foreign key("journal_id") references "accounts_journals"("id") on delete set null, foreign key("created_by") references "users"("id") on delete set null);

CREATE TABLE "accounts_bank_statement_lines" ("id" integer primary key autoincrement not null, "sort" integer, "journal_id" integer, "company_id" integer, "statement_id" integer, "partner_id" integer, "currency_id" integer, "foreign_currency_id" integer, "created_by" integer, "account_number" varchar, "partner_name" varchar, "transaction_type" varchar, "payment_reference" varchar, "internal_index" varchar, "transaction_details" text, "amount" numeric, "amount_currency" numeric, "is_reconciled" tinyint(1) not null default ('0'), "amount_residual" numeric, "created_at" datetime, "updated_at" datetime, "move_id" integer, foreign key("created_by") references users("id") on delete set null on update no action, foreign key("foreign_currency_id") references currencies("id") on delete set null on update no action, foreign key("currency_id") references currencies("id") on delete set null on update no action, foreign key("partner_id") references partners_partners("id") on delete set null on update no action, foreign key("statement_id") references accounts_bank_statements("id") on delete cascade on update no action, foreign key("company_id") references companies("id") on delete set null on update no action, foreign key("journal_id") references accounts_journals("id") on delete set null on update no action, foreign key("move_id") references "accounts_account_moves"("id") on delete cascade);

CREATE TABLE "accounts_full_reconciles" ("id" integer primary key autoincrement not null, "exchange_move_id" integer, "created_id" integer, "created_at" datetime, "updated_at" datetime, foreign key("exchange_move_id") references "accounts_account_moves"("id") on delete set null, foreign key("created_id") references "users"("id") on delete set null);

CREATE TABLE "accounts_partial_reconciles" ("id" integer primary key autoincrement not null, "debit_move_id" integer, "credit_move_id" integer, "full_reconcile_id" integer, "exchange_move_id" integer, "debit_currency_id" integer, "credit_currency_id" integer, "company_id" integer, "created_by" integer, "max_date" date, "amount" numeric, "debit_amount_currency" numeric, "credit_amount_currency" numeric, "created_at" datetime, "updated_at" datetime, foreign key("debit_move_id") references "accounts_account_moves"("id") on delete restrict, foreign key("credit_move_id") references "accounts_account_moves"("id") on delete restrict, foreign key("full_reconcile_id") references "accounts_full_reconciles"("id") on delete set null, foreign key("exchange_move_id") references "accounts_account_moves"("id") on delete set null, foreign key("debit_currency_id") references "currencies"("id") on delete set null, foreign key("credit_currency_id") references "currencies"("id") on delete set null, foreign key("company_id") references "companies"("id") on delete set null, foreign key("created_by") references "users"("id") on delete set null);

CREATE TABLE "accounts_payment_registers" ("id" integer primary key autoincrement not null, "currency_id" integer, "journal_id" integer, "partner_bank_id" integer, "custom_user_currency_id" integer, "source_currency_id" integer, "company_id" integer, "partner_id" integer, "payment_method_line_id" integer, "writeoff_account_id" integer, "creator_id" integer, "communication" varchar, "installments_mode" varchar, "payment_type" varchar, "partner_type" varchar, "payment_difference_handling" varchar, "writeoff_label" varchar, "payment_date" date, "amount" numeric, "custom_user_amount" numeric, "source_amount" numeric, "source_amount_currency" numeric, "group_payment" tinyint(1) default '0', "can_group_payments" tinyint(1) default '0', "payment_token_id" integer, "created_at" datetime, "updated_at" datetime, foreign key("currency_id") references "currencies"("id") on delete set null, foreign key("journal_id") references "accounts_journals"("id") on delete set null, foreign key("partner_bank_id") references "partners_bank_accounts"("id") on delete set null, foreign key("custom_user_currency_id") references "currencies"("id") on delete set null, foreign key("source_currency_id") references "currencies"("id") on delete set null, foreign key("company_id") references "companies"("id") on delete set null, foreign key("partner_id") references "partners_partners"("id") on delete set null, foreign key("payment_method_line_id") references "accounts_payment_method_lines"("id") on delete set null, foreign key("writeoff_account_id") references "accounts_accounts"("id") on delete set null, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "accounts_account_payment_register_move_lines" ("payment_register_id" integer not null, "move_line_id" integer not null, foreign key("payment_register_id") references "accounts_payment_registers"("id") on delete cascade, foreign key("move_line_id") references "accounts_account_move_lines"("id") on delete cascade);

CREATE TABLE "partners_partners" ("id" integer primary key autoincrement not null, "account_type" varchar not null default ('individual'), "sub_type" varchar default ('partner'), "name" varchar not null, "avatar" varchar, "email" varchar, "job_title" varchar, "website" varchar, "tax_id" varchar, "phone" varchar, "mobile" varchar, "color" varchar, "company_registry" varchar, "reference" varchar, "parent_id" integer, "creator_id" integer, "user_id" integer, "title_id" integer, "company_id" integer, "industry_id" integer, "deleted_at" datetime, "created_at" datetime, "updated_at" datetime, "street1" varchar, "street2" varchar, "city" varchar, "zip" varchar, "state_id" integer, "country_id" integer, "message_bounce" integer, "supplier_rank" integer, "customer_rank" integer, "invoice_warning" varchar, "autopost_bills" varchar, "credit_limit" varchar, "ignore_abnormal_invoice_date" varchar, "ignore_abnormal_invoice_amount" varchar, "invoice_sending_method" varchar, "invoice_edi_format_store" varchar, "trust" integer, "invoice_warn_msg" integer, "debit_limit" numeric, "peppol_endpoint" varchar, "peppol_eas" varchar, "sale_warn" varchar, "sale_warn_msg" varchar, "comment" text, "property_account_payable_id" integer, "property_account_receivable_id" integer, "property_account_position_id" integer, "property_payment_term_id" integer, "property_supplier_payment_term_id" integer, "property_inbound_payment_method_line_id" integer, "property_outbound_payment_method_line_id" integer, "email_verified_at" datetime, "is_active" tinyint(1) not null default '1', "password" varchar, "remember_token" varchar, foreign key("country_id") references countries("id") on delete restrict on update no action, foreign key("state_id") references states("id") on delete restrict on update no action, foreign key("parent_id") references partners_partners("id") on delete set null on update no action, foreign key("creator_id") references users("id") on delete set null on update no action, foreign key("user_id") references users("id") on delete set null on update no action, foreign key("title_id") references partners_titles("id") on delete set null on update no action, foreign key("company_id") references companies("id") on delete set null on update no action, foreign key("industry_id") references partners_industries("id") on delete set null on update no action, foreign key("property_account_payable_id") references "accounts_accounts"("id") on delete set null, foreign key("property_account_receivable_id") references "accounts_accounts"("id") on delete set null, foreign key("property_account_position_id") references "accounts_accounts"("id") on delete set null, foreign key("property_payment_term_id") references "accounts_payment_terms"("id") on delete set null, foreign key("property_supplier_payment_term_id") references "accounts_payment_terms"("id") on delete set null, foreign key("property_inbound_payment_method_line_id") references "accounts_payment_method_lines"("id") on delete set null, foreign key("property_outbound_payment_method_line_id") references "accounts_payment_method_lines"("id") on delete set null);

CREATE TABLE "accounts_accounts_move_line_taxes" ("move_line_id" integer not null, "tax_id" integer not null, foreign key("move_line_id") references "accounts_account_move_lines"("id") on delete cascade, foreign key("tax_id") references "accounts_taxes"("id") on delete cascade);

CREATE TABLE "accounts_accounts_move_reversals" ("id" integer primary key autoincrement not null, "company_id" integer not null, "creator_id" integer, "reason" text, "date" date not null, "created_at" datetime, "updated_at" datetime, foreign key("company_id") references "companies"("id") on delete cascade, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "accounts_accounts_move_reversal_move" ("move_id" integer not null, "reversal_id" integer not null, foreign key("move_id") references "accounts_account_moves"("id") on delete cascade, foreign key("reversal_id") references "accounts_accounts_move_reversals"("id") on delete cascade);

CREATE TABLE "accounts_accounts_move_reversal_new_move" ("new_move_id" integer not null, "reversal_id" integer not null, foreign key("new_move_id") references "accounts_account_moves"("id") on delete cascade, foreign key("reversal_id") references "accounts_accounts_move_reversals"("id") on delete cascade);

CREATE TABLE "accounts_accounts_move_payment" ("invoice_id" integer not null, "payment_id" integer not null, foreign key("invoice_id") references "accounts_account_moves"("id") on delete cascade, foreign key("payment_id") references "accounts_account_payments"("id") on delete cascade);

CREATE TABLE "accounts_account_moves" ("id" integer primary key autoincrement not null, "sort" integer, "journal_id" integer, "company_id" integer, "tax_cash_basis_origin_move_id" integer, "auto_post_origin_id" integer, "origin_payment_id" integer, "secure_sequence_number" integer, "invoice_payment_term_id" integer, "partner_id" integer, "commercial_partner_id" integer, "partner_shipping_id" integer, "partner_bank_id" integer, "fiscal_position_id" integer, "currency_id" integer, "reversed_entry_id" integer, "campaign_id" integer, "invoice_user_id" integer, "statement_line_id" integer, "invoice_incoterm_id" integer, "preferred_payment_method_line_id" integer, "invoice_cash_rounding_id" integer, "creator_id" integer, "sequence_prefix" varchar, "access_token" varchar, "name" varchar, "reference" varchar, "state" varchar not null default 'draft', "move_type" varchar not null, "auto_post" tinyint(1) not null default ('0'), "inalterable_hash" varchar, "payment_reference" varchar, "qr_code_method" varchar, "payment_state" varchar default 'not_paid', "invoice_source_email" varchar, "invoice_partner_display_name" varchar, "invoice_origin" varchar, "incoterm_location" varchar, "date" date not null, "auto_post_until" date, "invoice_date" date, "invoice_date_due" date, "delivery_date" date, "sending_data" text, "narration" text, "invoice_currency_rate" numeric, "amount_untaxed" numeric, "amount_tax" numeric, "amount_total" numeric, "amount_residual" numeric, "amount_untaxed_signed" numeric, "amount_untaxed_in_currency_signed" numeric, "amount_tax_signed" numeric, "amount_total_signed" numeric, "amount_total_in_currency_signed" numeric, "amount_residual_signed" numeric, "quick_edit_total_amount" numeric, "is_storno" tinyint(1) not null default '0', "always_tax_exigible" tinyint(1) not null default '0', "checked" tinyint(1) not null default '0', "posted_before" tinyint(1) not null default '0', "made_sequence_gap" tinyint(1) not null default '0', "is_manually_modified" tinyint(1) not null default '0', "is_move_sent" tinyint(1) not null default '0', "source_id" integer, "medium_id" integer, "created_at" datetime, "updated_at" datetime, "tax_cash_basis_reconcile_id" integer, foreign key("tax_cash_basis_reconcile_id") references accounts_partial_reconciles("id") on delete set null on update no action, foreign key("journal_id") references accounts_journals("id") on delete restrict on update no action, foreign key("company_id") references companies("id") on delete set null on update no action, foreign key("tax_cash_basis_origin_move_id") references accounts_account_moves("id") on delete set null on update no action, foreign key("auto_post_origin_id") references accounts_account_moves("id") on delete set null on update no action, foreign key("origin_payment_id") references accounts_account_payments("id") on delete set null on update no action, foreign key("invoice_payment_term_id") references accounts_payment_terms("id") on delete set null on update no action, foreign key("partner_id") references partners_partners("id") on delete set null on update no action, foreign key("commercial_partner_id") references partners_partners("id") on delete set null on update no action, foreign key("partner_shipping_id") references partners_partners("id") on delete set null on update no action, foreign key("partner_bank_id") references partners_bank_accounts("id") on delete set null on update no action, foreign key("fiscal_position_id") references accounts_fiscal_positions("id") on delete set null on update no action, foreign key("currency_id") references currencies("id") on delete restrict on update no action, foreign key("reversed_entry_id") references accounts_account_moves("id") on delete set null on update no action, foreign key("campaign_id") references utm_campaigns("id") on delete set null on update no action, foreign key("invoice_user_id") references users("id") on delete set null on update no action, foreign key("statement_line_id") references accounts_bank_statement_lines("id") on delete set null on update no action, foreign key("invoice_incoterm_id") references accounts_incoterms("id") on delete set null on update no action, foreign key("preferred_payment_method_line_id") references accounts_payment_method_lines("id") on delete set null on update no action, foreign key("invoice_cash_rounding_id") references accounts_cash_roundings("id") on delete set null on update no action, foreign key("creator_id") references users("id") on delete set null on update no action, foreign key("source_id") references utm_sources("id") on delete set null on update no action, foreign key("medium_id") references utm_mediums("id") on delete set null on update no action);

CREATE TABLE "employees_work_locations" ("id" integer primary key autoincrement not null, "name" varchar not null, "location_type" varchar not null, "location_number" varchar, "is_active" tinyint(1) default '0', "company_id" integer not null, "creator_id" integer, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime, foreign key("company_id") references "companies"("id") on delete restrict, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "employees_categories" ("id" integer primary key autoincrement not null, "name" varchar not null, "color" varchar, "creator_id" integer, "created_at" datetime, "updated_at" datetime, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "employees_employment_types" ("id" integer primary key autoincrement not null, "sort" integer, "name" varchar not null, "code" varchar, "country_id" integer, "creator_id" integer, "created_at" datetime, "updated_at" datetime, foreign key("country_id") references "countries"("id") on delete set null, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "employees_skill_types" ("id" integer primary key autoincrement not null, "name" varchar not null, "color" varchar, "is_active" tinyint(1) not null default '0', "creator_id" integer, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "employees_skill_levels" ("id" integer primary key autoincrement not null, "name" varchar not null, "level" integer, "default_level" tinyint(1), "skill_type_id" integer, "creator_id" integer, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime, foreign key("skill_type_id") references "employees_skill_types"("id") on delete cascade, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "employees_skills" ("id" integer primary key autoincrement not null, "sort" integer, "name" varchar not null, "skill_type_id" integer, "creator_id" integer, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime, foreign key("skill_type_id") references "employees_skill_types"("id") on delete cascade, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "employees_calendars" ("id" integer primary key autoincrement not null, "name" varchar not null, "timezone" varchar not null, "hours_per_day" float, "is_active" tinyint(1) not null default '0', "two_weeks_calendar" tinyint(1) default '0', "flexible_hours" tinyint(1) default '0', "full_time_required_hours" float, "creator_id" integer, "company_id" integer, "deleted_at" datetime, "created_at" datetime, "updated_at" datetime, foreign key("creator_id") references "users"("id") on delete set null, foreign key("company_id") references "companies"("id") on delete set null);

CREATE TABLE "employees_calendar_attendances" ("id" integer primary key autoincrement not null, "sort" integer, "name" varchar not null, "day_of_week" varchar not null, "day_period" varchar not null, "week_type" varchar, "display_type" varchar, "date_from" varchar, "date_to" varchar, "duration_days" varchar, "hour_from" varchar not null, "hour_to" varchar not null, "calendar_id" integer not null, "creator_id" integer, "created_at" datetime, "updated_at" datetime, foreign key("calendar_id") references "employees_calendars"("id") on delete cascade, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "employees_calendar_leaves" ("id" integer primary key autoincrement not null, "name" varchar not null, "time_type" varchar not null, "date_from" varchar not null, "date_to" varchar not null, "company_id" integer, "calendar_id" integer, "creator_id" integer, "created_at" datetime, "updated_at" datetime, foreign key("company_id") references "companies"("id") on delete set null, foreign key("calendar_id") references "employees_calendars"("id") on delete set null, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "employees_departure_reasons" ("id" integer primary key autoincrement not null, "sort" integer, "reason_code" integer, "name" varchar not null, "creator_id" integer, "created_at" datetime, "updated_at" datetime, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "employees_employees" ("id" integer primary key autoincrement not null, "time_zone" varchar, "work_permit" varchar, "address_id" integer, "leave_manager_id" integer, "bank_account_id" integer, "private_state_id" integer, "private_country_id" integer, "company_id" integer, "user_id" integer, "creator_id" integer, "calendar_id" integer, "department_id" integer, "job_id" integer, "partner_id" integer, "work_location_id" integer, "parent_id" integer, "coach_id" integer, "country_id" integer, "state_id" integer, "country_of_birth" integer, "departure_reason_id" integer, "attendance_manager_id" integer, "name" varchar, "job_title" varchar, "work_phone" varchar, "mobile_phone" varchar, "color" varchar, "children" integer, "distance_home_work" integer default '0', "km_home_work" integer default '0', "distance_home_work_unit" varchar default 'km', "work_email" varchar, "private_phone" varchar, "private_email" varchar, "private_street1" varchar, "private_street2" varchar, "private_city" varchar, "private_zip" varchar, "private_car_plate" varchar, "lang" varchar, "gender" varchar, "birthday" varchar, "marital" varchar not null default 'single', "spouse_complete_name" varchar, "spouse_birthdate" varchar, "place_of_birth" varchar, "ssnid" varchar, "sinid" varchar, "identification_id" varchar, "passport_id" varchar, "permit_no" varchar, "visa_no" varchar, "certificate" varchar, "study_field" varchar, "study_school" varchar, "emergency_contact" varchar, "emergency_phone" varchar, "employee_type" varchar not null default 'employee', "barcode" varchar, "pin" varchar, "visa_expire" varchar, "work_permit_expiration_date" varchar, "departure_date" varchar, "departure_description" text, "additional_note" text, "notes" text, "is_active" tinyint(1) not null default '0', "is_flexible" tinyint(1), "is_fully_flexible" tinyint(1), "work_permit_scheduled_activity" tinyint(1), "deleted_at" datetime, "created_at" datetime, "updated_at" datetime, foreign key("private_state_id") references "states"("id") on delete set null, foreign key("private_country_id") references "countries"("id") on delete set null, foreign key("company_id") references "companies"("id") on delete set null, foreign key("user_id") references "users"("id") on delete restrict, foreign key("creator_id") references "users"("id") on delete set null, foreign key("calendar_id") references "employees_calendars"("id") on delete set null, foreign key("department_id") references "employees_departments"("id") on delete set null, foreign key("job_id") references "employees_job_positions"("id") on delete set null, foreign key("partner_id") references "partners_partners"("id") on delete set null, foreign key("work_location_id") references "employees_work_locations"("id") on delete set null, foreign key("parent_id") references "employees_employees"("id") on delete set null, foreign key("coach_id") references "employees_employees"("id") on delete set null, foreign key("state_id") references "states"("id") on delete set null, foreign key("country_id") references "countries"("id") on delete set null, foreign key("country_of_birth") references "countries"("id") on delete set null, foreign key("departure_reason_id") references "employees_departure_reasons"("id") on delete restrict, foreign key("bank_account_id") references "partners_bank_accounts"("id") on delete set null, foreign key("leave_manager_id") references "users"("id") on delete set null, foreign key("attendance_manager_id") references "users"("id") on delete set null);

CREATE TABLE "employees_employee_skills" ("id" integer primary key autoincrement not null, "employee_id" integer, "skill_id" integer, "skill_level_id" integer, "skill_type_id" integer, "creator_id" integer, "created_at" datetime, "updated_at" datetime, "deleted_at" datetime, foreign key("employee_id") references "employees_employees"("id") on delete cascade, foreign key("skill_id") references "employees_skills"("id") on delete restrict, foreign key("skill_level_id") references "employees_skill_levels"("id") on delete restrict, foreign key("skill_type_id") references "employees_skill_types"("id") on delete restrict, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "employees_employee_categories" ("employee_id" integer, "category_id" integer, foreign key("employee_id") references "employees_employees"("id") on delete cascade, foreign key("category_id") references "employees_categories"("id") on delete cascade);

CREATE TABLE "employees_employee_resume_line_types" ("id" integer primary key autoincrement not null, "sort" integer not null, "name" varchar not null, "creator_id" integer, "created_at" datetime, "updated_at" datetime, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "employees_employee_resumes" ("id" integer primary key autoincrement not null, "employee_id" integer not null, "employee_resume_line_type_id" integer, "creator_id" integer, "user_id" integer, "display_type" varchar not null, "start_date" date not null, "end_date" date, "name" varchar not null, "description" text, "created_at" datetime, "updated_at" datetime, foreign key("employee_id") references "employees_employees"("id") on delete cascade, foreign key("employee_resume_line_type_id") references "employees_employee_resume_line_types"("id") on delete set null, foreign key("creator_id") references "users"("id") on delete set null, foreign key("user_id") references "users"("id") on delete set null);

CREATE TABLE "employees_departments" ("id" integer primary key autoincrement not null, "company_id" integer, "parent_id" integer, "master_department_id" integer, "creator_id" integer, "name" varchar, "complete_name" varchar, "parent_path" varchar, "color" text, "deleted_at" datetime, "created_at" datetime, "updated_at" datetime, "manager_id" integer, foreign key("creator_id") references users("id") on delete set null on update no action, foreign key("master_department_id") references employees_departments("id") on delete set null on update no action, foreign key("parent_id") references employees_departments("id") on delete set null on update no action, foreign key("company_id") references companies("id") on delete set null on update no action, foreign key("manager_id") references "employees_employees"("id") on delete set null);

CREATE TABLE "job_position_skills" ("job_position_id" integer not null, "skill_id" integer not null, foreign key("job_position_id") references "employees_job_positions"("id") on delete cascade, foreign key("skill_id") references "employees_skills"("id") on delete cascade);

CREATE TABLE "activity_plans" ("id" integer primary key autoincrement not null, "plugin" varchar, "name" varchar not null, "is_active" tinyint(1) default ('0'), "creator_id" integer, "company_id" integer, "deleted_at" datetime, "created_at" datetime, "updated_at" datetime, "department_id" integer, foreign key("company_id") references companies("id") on delete set null on update no action, foreign key("creator_id") references users("id") on delete set null on update no action, foreign key("department_id") references "employees_departments"("id") on delete set null);

CREATE TABLE "inventories_tags" ("id" integer primary key autoincrement not null, "name" varchar not null, "color" varchar, "sort" integer, "creator_id" integer, "deleted_at" datetime, "created_at" datetime, "updated_at" datetime, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "inventories_storage_categories" ("id" integer primary key autoincrement not null, "name" varchar not null, "sort" integer, "allow_new_products" varchar not null, "max_weight" numeric not null default '0', "company_id" integer, "creator_id" integer, "created_at" datetime, "updated_at" datetime, foreign key("company_id") references "companies"("id") on delete set null, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "inventories_locations" ("id" integer primary key autoincrement not null, "position_x" integer default '0', "position_y" integer default '0', "position_z" integer default '0', "type" varchar not null, "name" varchar not null, "full_name" varchar, "description" varchar, "parent_path" varchar, "barcode" varchar, "removal_strategy" varchar, "cyclic_inventory_frequency" integer default '0', "last_inventory_date" date, "next_inventory_date" date, "is_scrap" tinyint(1) default '0', "is_replenish" tinyint(1) default '0', "is_dock" tinyint(1) default '0', "parent_id" integer, "company_id" integer, "storage_category_id" integer, "warehouse_id" integer, "creator_id" integer, "deleted_at" datetime, "created_at" datetime, "updated_at" datetime, foreign key("parent_id") references "inventories_locations"("id") on delete set null, foreign key("company_id") references "companies"("id") on delete set null, foreign key("storage_category_id") references "inventories_storage_categories"("id") on delete set null, foreign key("warehouse_id") references "inventories_warehouses"("id") on delete set null, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "inventories_operation_types" ("id" integer primary key autoincrement not null, "name" varchar not null, "type" varchar not null, "sort" integer, "sequence_code" varchar not null, "reservation_method" varchar not null default 'at_confirm', "reservation_days_before" integer default '0', "reservation_days_before_priority" integer default '0', "product_label_format" varchar, "lot_label_format" varchar, "package_label_to_print" varchar, "barcode" varchar, "create_backorder" varchar not null default 'ask', "move_type" varchar default 'direct', "show_entire_packs" tinyint(1) default '0', "use_create_lots" tinyint(1) default '0', "use_existing_lots" tinyint(1) default '0', "print_label" tinyint(1) default '0', "show_operations" tinyint(1) default '0', "auto_show_reception_report" tinyint(1) default '0', "auto_print_delivery_slip" tinyint(1) default '0', "auto_print_return_slip" tinyint(1) default '0', "auto_print_product_labels" tinyint(1) default '0', "auto_print_lot_labels" tinyint(1) default '0', "auto_print_reception_report" tinyint(1) default '0', "auto_print_reception_report_labels" tinyint(1) default '0', "auto_print_packages" tinyint(1) default '0', "auto_print_package_label" tinyint(1) default '0', "return_operation_type_id" integer, "source_location_id" integer not null, "destination_location_id" integer not null, "warehouse_id" integer, "company_id" integer not null, "creator_id" integer, "deleted_at" datetime, "created_at" datetime, "updated_at" datetime, foreign key("return_operation_type_id") references "inventories_operation_types"("id") on delete set null, foreign key("source_location_id") references "inventories_locations"("id") on delete restrict, foreign key("destination_location_id") references "inventories_locations"("id") on delete restrict, foreign key("warehouse_id") references "inventories_warehouses"("id") on delete cascade, foreign key("company_id") references "companies"("id") on delete restrict, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "inventories_routes" ("id" integer primary key autoincrement not null, "sort" integer, "name" varchar not null, "product_selectable" tinyint(1) default '0', "product_category_selectable" tinyint(1) default '0', "warehouse_selectable" tinyint(1) default '0', "packaging_selectable" tinyint(1) default '0', "supplied_warehouse_id" integer, "supplier_warehouse_id" integer, "company_id" integer, "creator_id" integer, "deleted_at" datetime, "created_at" datetime, "updated_at" datetime, foreign key("supplied_warehouse_id") references "inventories_warehouses"("id") on delete set null, foreign key("supplier_warehouse_id") references "inventories_warehouses"("id") on delete set null, foreign key("company_id") references "companies"("id") on delete restrict, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "inventories_rules" ("id" integer primary key autoincrement not null, "sort" integer, "name" varchar not null, "route_sort" integer default '0', "delay" integer default '0', "group_propagation_option" varchar, "action" varchar not null, "procure_method" varchar not null default 'make_to_stock', "auto" varchar not null default 'manual', "push_domain" varchar, "location_dest_from_rule" tinyint(1) default '0', "propagate_cancel" tinyint(1) default '0', "propagate_carrier" tinyint(1) default '0', "source_location_id" integer, "destination_location_id" integer not null, "route_id" integer not null, "operation_type_id" integer, "partner_address_id" integer, "warehouse_id" integer, "propagate_warehouse_id" integer, "company_id" integer not null, "creator_id" integer, "deleted_at" datetime, "created_at" datetime, "updated_at" datetime, foreign key("source_location_id") references "inventories_locations"("id") on delete set null, foreign key("destination_location_id") references "inventories_locations"("id") on delete restrict, foreign key("route_id") references "inventories_routes"("id") on delete cascade, foreign key("operation_type_id") references "inventories_operation_types"("id") on delete set null, foreign key("partner_address_id") references "partners_partners"("id") on delete set null, foreign key("warehouse_id") references "inventories_warehouses"("id") on delete set null, foreign key("propagate_warehouse_id") references "inventories_warehouses"("id") on delete set null, foreign key("company_id") references "companies"("id") on delete restrict, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "inventories_route_warehouses" ("warehouse_id" integer not null, "route_id" integer not null, foreign key("warehouse_id") references "inventories_warehouses"("id") on delete cascade, foreign key("route_id") references "inventories_routes"("id") on delete cascade);

CREATE TABLE "inventories_warehouses" ("id" integer primary key autoincrement not null, "name" varchar not null, "code" varchar, "sort" integer, "reception_steps" varchar not null, "delivery_steps" varchar not null, "company_id" integer not null, "partner_address_id" integer, "creator_id" integer, "deleted_at" datetime, "created_at" datetime, "updated_at" datetime, "view_location_id" integer not null, "lot_stock_location_id" integer not null, "input_stock_location_id" integer, "qc_stock_location_id" integer, "output_stock_location_id" integer, "pack_stock_location_id" integer, "mto_pull_id" integer, "buy_pull_id" integer, "pick_type_id" integer, "pack_type_id" integer, "out_type_id" integer, "in_type_id" integer, "internal_type_id" integer, "qc_type_id" integer, "store_type_id" integer, "xdock_type_id" integer, "crossdock_route_id" integer, "reception_route_id" integer, "delivery_route_id" integer, foreign key("creator_id") references users("id") on delete set null on update no action, foreign key("partner_address_id") references partners_partners("id") on delete set null on update no action, foreign key("company_id") references companies("id") on delete restrict on update no action, foreign key("view_location_id") references "inventories_locations"("id") on delete restrict, foreign key("lot_stock_location_id") references "inventories_locations"("id") on delete restrict, foreign key("input_stock_location_id") references "inventories_locations"("id") on delete set null, foreign key("qc_stock_location_id") references "inventories_locations"("id") on delete set null, foreign key("output_stock_location_id") references "inventories_locations"("id") on delete set null, foreign key("pack_stock_location_id") references "inventories_locations"("id") on delete set null, foreign key("mto_pull_id") references "inventories_rules"("id") on delete set null, foreign key("buy_pull_id") references "inventories_rules"("id") on delete set null, foreign key("pick_type_id") references "inventories_operation_types"("id") on delete set null, foreign key("pack_type_id") references "inventories_operation_types"("id") on delete set null, foreign key("out_type_id") references "inventories_operation_types"("id") on delete set null, foreign key("in_type_id") references "inventories_operation_types"("id") on delete set null, foreign key("internal_type_id") references "inventories_operation_types"("id") on delete set null, foreign key("qc_type_id") references "inventories_operation_types"("id") on delete set null, foreign key("store_type_id") references "inventories_operation_types"("id") on delete set null, foreign key("xdock_type_id") references "inventories_operation_types"("id") on delete set null, foreign key("crossdock_route_id") references "inventories_routes"("id") on delete restrict, foreign key("reception_route_id") references "inventories_routes"("id") on delete restrict, foreign key("delivery_route_id") references "inventories_routes"("id") on delete restrict);

CREATE TABLE "inventories_warehouse_resupplies" ("supplied_warehouse_id" integer not null, "supplier_warehouse_id" integer not null, foreign key("supplied_warehouse_id") references "inventories_warehouses"("id") on delete cascade, foreign key("supplier_warehouse_id") references "inventories_warehouses"("id") on delete cascade);

CREATE TABLE "inventories_package_types" ("id" integer primary key autoincrement not null, "sort" integer, "name" varchar not null, "barcode" varchar, "height" numeric default '0', "width" numeric default '0', "length" numeric default '0', "base_weight" numeric default '0', "max_weight" numeric default '0', "shipper_package_code" varchar, "package_carrier_type" varchar, "company_id" integer, "creator_id" integer, "created_at" datetime, "updated_at" datetime, foreign key("company_id") references "companies"("id") on delete set null, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "inventories_packages" ("id" integer primary key autoincrement not null, "name" varchar not null, "package_use" varchar not null default 'disposable', "pack_date" date, "package_type_id" integer, "location_id" integer, "company_id" integer, "creator_id" integer, "created_at" datetime, "updated_at" datetime, foreign key("package_type_id") references "inventories_package_types"("id") on delete set null, foreign key("location_id") references "inventories_locations"("id") on delete set null, foreign key("company_id") references "companies"("id") on delete restrict, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "inventories_category_routes" ("category_id" integer not null, "route_id" integer not null, foreign key("category_id") references "products_categories"("id") on delete cascade, foreign key("route_id") references "inventories_routes"("id") on delete cascade);

CREATE TABLE "inventories_product_routes" ("product_id" integer not null, "route_id" integer not null, foreign key("product_id") references "products_products"("id") on delete cascade, foreign key("route_id") references "inventories_routes"("id") on delete cascade);

CREATE TABLE "products_packagings" ("id" integer primary key autoincrement not null, "name" varchar not null, "barcode" varchar, "qty" numeric, "sort" integer, "product_id" integer not null, "creator_id" integer, "company_id" integer, "created_at" datetime, "updated_at" datetime, "package_type_id" integer, foreign key("company_id") references companies("id") on delete set null on update no action, foreign key("creator_id") references users("id") on delete set null on update no action, foreign key("product_id") references products_products("id") on delete cascade on update no action, foreign key("package_type_id") references "inventories_package_types"("id") on delete set null);

CREATE TABLE "inventories_storage_category_capacities" ("id" integer primary key autoincrement not null, "qty" numeric not null default '0', "product_id" integer, "storage_category_id" integer not null, "package_type_id" integer, "creator_id" integer, "created_at" datetime, "updated_at" datetime, foreign key("product_id") references "products_products"("id") on delete cascade, foreign key("storage_category_id") references "inventories_storage_categories"("id") on delete cascade, foreign key("package_type_id") references "inventories_package_types"("id") on delete cascade, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "inventories_route_packagings" ("route_id" integer not null, "packaging_id" integer not null, foreign key("route_id") references "inventories_routes"("id") on delete cascade, foreign key("packaging_id") references "products_packagings"("id") on delete cascade);

CREATE TABLE "inventories_lots" ("id" integer primary key autoincrement not null, "name" varchar not null, "description" text, "reference" varchar, "properties" text, "expiry_reminded" tinyint(1) default '0', "expiration_date" datetime, "use_date" datetime, "removal_date" datetime, "alert_date" datetime, "product_id" integer not null, "uom_id" integer, "location_id" integer, "company_id" integer, "creator_id" integer, "created_at" datetime, "updated_at" datetime, foreign key("product_id") references "products_products"("id") on delete restrict, foreign key("uom_id") references "unit_of_measures"("id") on delete set null, foreign key("location_id") references "inventories_locations"("id") on delete set null, foreign key("company_id") references "companies"("id") on delete set null, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "inventories_product_quantities" ("id" integer primary key autoincrement not null, "quantity" numeric default '0', "reserved_quantity" numeric not null default '0', "counted_quantity" numeric default '0', "difference_quantity" numeric default '0', "inventory_diff_quantity" numeric default '0', "inventory_quantity_set" tinyint(1) not null default '0', "scheduled_at" date, "incoming_at" datetime not null, "product_id" integer not null, "location_id" integer not null, "storage_category_id" integer, "lot_id" integer, "package_id" integer, "partner_id" integer, "user_id" integer, "company_id" integer, "creator_id" integer, "created_at" datetime, "updated_at" datetime, foreign key("product_id") references "products_products"("id") on delete restrict, foreign key("location_id") references "inventories_locations"("id") on delete restrict, foreign key("storage_category_id") references "inventories_storage_categories"("id") on delete set null, foreign key("lot_id") references "inventories_lots"("id") on delete restrict, foreign key("package_id") references "inventories_packages"("id") on delete restrict, foreign key("partner_id") references "partners_partners"("id") on delete set null, foreign key("user_id") references "users"("id") on delete set null, foreign key("company_id") references "companies"("id") on delete set null, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "inventories_product_quantity_relocations" ("id" integer primary key autoincrement not null, "description" text, "destination_location_id" integer, "destination_package_id" integer not null, "creator_id" integer, "created_at" datetime, "updated_at" datetime, foreign key("destination_location_id") references "inventories_locations"("id") on delete set null, foreign key("destination_package_id") references "inventories_packages"("id") on delete restrict, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "inventories_package_levels" ("id" integer primary key autoincrement not null, "package_id" integer not null, "operation_id" integer, "destination_location_id" integer, "company_id" integer not null, "creator_id" integer, "created_at" datetime, "updated_at" datetime, foreign key("package_id") references "inventories_packages"("id") on delete restrict, foreign key("operation_id") references "inventories_operations"("id") on delete set null, foreign key("destination_location_id") references "inventories_locations"("id") on delete set null, foreign key("company_id") references "companies"("id") on delete restrict, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "inventories_package_destinations" ("id" integer primary key autoincrement not null, "operation_id" integer, "destination_location_id" integer, "creator_id" integer, "created_at" datetime, "updated_at" datetime, foreign key("operation_id") references "inventories_operations"("id") on delete set null, foreign key("destination_location_id") references "inventories_locations"("id") on delete set null, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "inventories_scraps" ("id" integer primary key autoincrement not null, "name" varchar not null, "origin" varchar, "state" varchar, "qty" numeric not null default '0', "should_replenish" tinyint(1) not null default '0', "closed_at" date, "product_id" integer not null, "uom_id" integer not null, "lot_id" integer, "package_id" integer, "partner_id" integer, "operation_id" integer, "source_location_id" integer not null, "destination_location_id" integer not null, "company_id" integer not null, "creator_id" integer, "created_at" datetime, "updated_at" datetime, foreign key("product_id") references "products_products"("id") on delete restrict, foreign key("uom_id") references "unit_of_measures"("id") on delete restrict, foreign key("lot_id") references "inventories_lots"("id") on delete set null, foreign key("package_id") references "inventories_packages"("id") on delete set null, foreign key("partner_id") references "partners_partners"("id") on delete set null, foreign key("operation_id") references "inventories_operations"("id") on delete set null, foreign key("source_location_id") references "inventories_locations"("id") on delete restrict, foreign key("destination_location_id") references "inventories_locations"("id") on delete restrict, foreign key("company_id") references "companies"("id") on delete restrict, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "inventories_scrap_tags" ("tag_id" integer not null, "scrap_id" integer not null, foreign key("tag_id") references "inventories_tags"("id") on delete cascade, foreign key("scrap_id") references "inventories_scraps"("id") on delete cascade);

CREATE TABLE "inventories_move_destinations" ("origin_move_id" integer not null, "destination_move_id" integer not null, foreign key("origin_move_id") references "inventories_moves"("id") on delete cascade, foreign key("destination_move_id") references "inventories_moves"("id") on delete cascade);

CREATE TABLE "inventories_move_lines" ("id" integer primary key autoincrement not null, "lot_name" varchar, "state" varchar, "reference" varchar, "picking_description" varchar, "qty" numeric default '0', "uom_qty" numeric default '0', "is_picked" tinyint(1) not null default '0', "scheduled_at" datetime not null, "move_id" integer, "operation_id" integer, "product_id" integer not null, "uom_id" integer not null, "package_id" integer, "result_package_id" integer, "package_level_id" integer, "lot_id" integer, "partner_id" integer, "source_location_id" integer not null, "destination_location_id" integer not null, "company_id" integer not null, "creator_id" integer, "created_at" datetime, "updated_at" datetime, foreign key("move_id") references "inventories_moves"("id") on delete set null, foreign key("operation_id") references "inventories_operations"("id") on delete set null, foreign key("product_id") references "products_products"("id") on delete cascade, foreign key("uom_id") references "unit_of_measures"("id") on delete restrict, foreign key("package_id") references "inventories_packages"("id") on delete restrict, foreign key("result_package_id") references "inventories_packages"("id") on delete restrict, foreign key("package_level_id") references "inventories_package_levels"("id") on delete set null, foreign key("lot_id") references "inventories_lots"("id") on delete set null, foreign key("partner_id") references "partners_partners"("id") on delete set null, foreign key("source_location_id") references "inventories_locations"("id") on delete restrict, foreign key("destination_location_id") references "inventories_locations"("id") on delete restrict, foreign key("company_id") references "companies"("id") on delete restrict, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "inventories_order_points" ("id" integer primary key autoincrement not null, "name" varchar not null, "trigger" varchar not null, "snoozed_until" date, "product_min_qty" numeric not null default '0', "product_max_qty" numeric not null default '0', "qty_multiple" numeric not null default '0', "qty_to_order_manual" numeric default '0', "product_id" integer not null, "product_category_id" integer, "warehouse_id" integer not null, "location_id" integer not null, "route_id" integer, "company_id" integer not null, "creator_id" integer, "deleted_at" datetime, "created_at" datetime, "updated_at" datetime, foreign key("product_id") references "products_products"("id") on delete cascade, foreign key("product_category_id") references "products_categories"("id") on delete set null, foreign key("warehouse_id") references "inventories_warehouses"("id") on delete cascade, foreign key("location_id") references "inventories_locations"("id") on delete cascade, foreign key("route_id") references "inventories_routes"("id") on delete set null, foreign key("company_id") references "companies"("id") on delete restrict, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "products_products" ("id" integer primary key autoincrement not null, "type" varchar not null, "name" varchar not null, "service_tracking" varchar not null default ('none'), "reference" varchar, "barcode" varchar, "price" numeric, "cost" numeric, "volume" numeric, "weight" numeric, "description" text, "description_purchase" text, "description_sale" text, "enable_sales" tinyint(1), "enable_purchase" tinyint(1), "is_favorite" tinyint(1), "is_configurable" tinyint(1), "sort" integer, "images" text, "parent_id" integer, "uom_id" integer not null, "uom_po_id" integer not null, "category_id" integer not null, "company_id" integer, "creator_id" integer, "deleted_at" datetime, "created_at" datetime, "updated_at" datetime, "sale_delay" integer, "tracking" varchar default ('qty'), "description_picking" text, "description_pickingout" text, "description_pickingin" text, "is_storable" tinyint(1) default ('0'), "expiration_time" integer default ('0'), "use_time" integer default ('0'), "removal_time" integer default ('0'), "alert_time" integer default ('0'), "use_expiration_date" tinyint(1) default ('0'), "responsible_id" integer, "property_account_income_id" integer, "property_account_expense_id" integer, "image" varchar, "service_type" varchar, "sale_line_warn" varchar, "expense_policy" text, "invoice_policy" text, "sales_ok" tinyint(1) not null default '1', "purchase_ok" tinyint(1) not null default '1', "sale_line_warn_msg" varchar, foreign key("responsible_id") references users("id") on delete set null on update no action, foreign key("parent_id") references products_products("id") on delete cascade on update no action, foreign key("uom_id") references unit_of_measures("id") on delete restrict on update no action, foreign key("uom_po_id") references unit_of_measures("id") on delete restrict on update no action, foreign key("category_id") references products_categories("id") on delete cascade on update no action, foreign key("company_id") references companies("id") on delete set null on update no action, foreign key("creator_id") references users("id") on delete set null on update no action, foreign key("property_account_income_id") references "accounts_accounts"("id") on delete set null, foreign key("property_account_expense_id") references "accounts_accounts"("id") on delete set null);

CREATE TABLE "payments_payment_methods" ("id" integer primary key autoincrement not null, "sort" integer, "primary_payment_method_id" integer, "created_by" integer, "code" varchar not null, "support_refund" varchar, "name" varchar not null, "is_active" tinyint(1) not null default '1', "support_tokenization" tinyint(1), "support_express_checkout" tinyint(1), "created_at" datetime, "updated_at" datetime, foreign key("primary_payment_method_id") references "payments_payment_methods"("id") on delete set null, foreign key("created_by") references "users"("id") on delete set null);

CREATE TABLE "payments_payment_tokens" ("id" integer primary key autoincrement not null, "company_id" integer, "payment_method_id" integer, "partner_id" integer, "created_by" integer, "payment_details" text, "provider_reference_id" varchar, "is_active" tinyint(1) not null default '0', "created_at" datetime, "updated_at" datetime, foreign key("company_id") references "companies"("id") on delete set null, foreign key("payment_method_id") references "payments_payment_methods"("id") on delete restrict, foreign key("partner_id") references "partners_partners"("id") on delete restrict, foreign key("created_by") references "users"("id") on delete set null);

CREATE TABLE "payments_payment_transactions" ("id" integer primary key autoincrement not null, "sort" integer, "move_id" integer not null, "journal_id" integer, "company_id" integer, "statement_id" integer, "partner_id" integer, "currency_id" integer, "foreign_currency_id" integer, "created_id" integer, "account_number" varchar, "partner_name" varchar, "transaction_type" varchar, "payment_reference" varchar, "internal_index" varchar, "transaction_details" text, "amount" numeric not null default '0', "amount_currency" numeric default '0', "amount_residual" numeric default '0', "is_reconciled" tinyint(1) not null default '0', "created_at" datetime, "updated_at" datetime, foreign key("move_id") references "accounts_account_moves"("id") on delete restrict, foreign key("journal_id") references "accounts_journals"("id") on delete set null, foreign key("company_id") references "companies"("id") on delete set null, foreign key("statement_id") references "accounts_bank_statements"("id") on delete set null, foreign key("partner_id") references "partners_partners"("id") on delete set null, foreign key("currency_id") references "currencies"("id") on delete restrict, foreign key("foreign_currency_id") references "currencies"("id") on delete restrict, foreign key("created_id") references "users"("id") on delete set null);

CREATE TABLE "accounts_account_payments" ("id" integer primary key autoincrement not null, "journal_id" integer, "company_id" integer, "partner_bank_id" integer, "paired_internal_transfer_payment_id" integer, "payment_method_line_id" integer, "payment_method_id" integer, "currency_id" integer, "partner_id" integer, "outstanding_account_id" integer, "destination_account_id" integer, "created_by" integer, "name" varchar, "state" varchar not null, "payment_type" varchar, "partner_type" varchar, "memo" varchar, "payment_reference" varchar, "date" date, "amount" numeric, "amount_company_currency_signed" numeric, "is_reconciled" tinyint(1), "is_matched" tinyint(1), "is_sent" tinyint(1), "source_payment_id" integer, "created_at" datetime, "updated_at" datetime, "move_id" integer, "payment_token_id" integer, "payment_transaction_id" integer, foreign key("move_id") references accounts_account_moves("id") on delete set null on update no action, foreign key("journal_id") references accounts_journals("id") on delete restrict on update no action, foreign key("company_id") references companies("id") on delete restrict on update no action, foreign key("partner_bank_id") references partners_bank_accounts("id") on delete set null on update no action, foreign key("paired_internal_transfer_payment_id") references accounts_account_payments("id") on delete set null on update no action, foreign key("payment_method_line_id") references accounts_payment_method_lines("id") on delete set null on update no action, foreign key("payment_method_id") references accounts_payment_methods("id") on delete set null on update no action, foreign key("currency_id") references currencies("id") on delete set null on update no action, foreign key("partner_id") references partners_partners("id") on delete set null on update no action, foreign key("outstanding_account_id") references accounts_accounts("id") on delete set null on update no action, foreign key("destination_account_id") references accounts_accounts("id") on delete set null on update no action, foreign key("created_by") references users("id") on delete set null on update no action, foreign key("source_payment_id") references accounts_account_payments("id") on delete set null on update no action, foreign key("payment_token_id") references "payments_payment_tokens"("id") on delete set null, foreign key("payment_transaction_id") references "payments_payment_transactions"("id") on delete set null);

CREATE TABLE "projects_project_stages" ("id" integer primary key autoincrement not null, "name" varchar not null, "tags" text, "is_active" tinyint(1) not null default '1', "is_collapsed" tinyint(1) not null default '0', "sort" integer, "company_id" integer, "creator_id" integer, "deleted_at" datetime, "created_at" datetime, "updated_at" datetime, foreign key("company_id") references "companies"("id") on delete set null, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "projects_projects" ("id" integer primary key autoincrement not null, "name" varchar not null, "tasks_label" varchar, "description" text, "visibility" varchar, "color" varchar, "sort" integer, "start_date" date, "end_date" date, "allocated_hours" numeric, "allow_timesheets" tinyint(1) not null default '0', "allow_milestones" tinyint(1) not null default '0', "allow_task_dependencies" tinyint(1) not null default '0', "is_active" tinyint(1) not null default '1', "stage_id" integer, "partner_id" integer, "company_id" integer, "user_id" integer, "creator_id" integer, "deleted_at" datetime, "created_at" datetime, "updated_at" datetime, foreign key("stage_id") references "projects_project_stages"("id") on delete restrict, foreign key("partner_id") references "partners_partners"("id") on delete set null, foreign key("company_id") references "companies"("id") on delete set null, foreign key("user_id") references "users"("id") on delete set null, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "projects_milestones" ("id" integer primary key autoincrement not null, "name" varchar not null, "deadline" datetime, "is_completed" tinyint(1) not null default '0', "completed_at" datetime, "project_id" integer not null, "creator_id" integer, "created_at" datetime, "updated_at" datetime, foreign key("project_id") references "projects_projects"("id") on delete cascade, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "projects_user_project_favorites" ("project_id" integer not null, "user_id" integer not null, foreign key("project_id") references "projects_projects"("id") on delete cascade, foreign key("user_id") references "users"("id") on delete cascade);

CREATE TABLE "projects_tags" ("id" integer primary key autoincrement not null, "name" varchar not null, "color" varchar, "creator_id" integer, "deleted_at" datetime, "created_at" datetime, "updated_at" datetime, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "projects_project_tag" ("tag_id" integer not null, "project_id" integer not null, foreign key("tag_id") references "projects_tags"("id") on delete cascade, foreign key("project_id") references "projects_projects"("id") on delete cascade);

CREATE TABLE "projects_task_stages" ("id" integer primary key autoincrement not null, "name" varchar not null, "is_active" tinyint(1) not null default '1', "is_collapsed" tinyint(1) not null default '0', "sort" integer, "project_id" integer not null, "company_id" integer, "user_id" integer, "creator_id" integer, "deleted_at" datetime, "created_at" datetime, "updated_at" datetime, foreign key("project_id") references "projects_projects"("id") on delete cascade, foreign key("company_id") references "companies"("id") on delete set null, foreign key("user_id") references "users"("id") on delete set null, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "projects_tasks" ("id" integer primary key autoincrement not null, "title" varchar not null, "description" text, "color" varchar, "priority" tinyint(1) not null default '0', "state" varchar not null, "tags" text, "sort" integer, "is_active" tinyint(1) not null default '1', "is_recurring" tinyint(1) not null default '0', "deadline" datetime, "working_hours_open" numeric not null default '0', "working_hours_close" numeric not null default '0', "allocated_hours" numeric not null default '0', "remaining_hours" numeric not null default '0', "effective_hours" numeric not null default '0', "total_hours_spent" numeric not null default '0', "overtime" numeric not null default '0', "progress" numeric not null default '0', "subtask_effective_hours" numeric not null default '0', "project_id" integer, "milestone_id" integer, "stage_id" integer, "partner_id" integer, "parent_id" integer, "company_id" integer, "creator_id" integer, "deleted_at" datetime, "created_at" datetime, "updated_at" datetime, foreign key("project_id") references "projects_projects"("id") on delete set null, foreign key("milestone_id") references "projects_milestones"("id") on delete set null, foreign key("stage_id") references "projects_task_stages"("id") on delete restrict, foreign key("partner_id") references "partners_partners"("id") on delete set null, foreign key("parent_id") references "projects_tasks"("id") on delete set null, foreign key("company_id") references "companies"("id") on delete set null, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "projects_task_users" ("id" integer primary key autoincrement not null, "task_id" integer not null, "user_id" integer not null, "stage_id" integer, "created_at" datetime, "updated_at" datetime, foreign key("task_id") references "projects_tasks"("id") on delete cascade, foreign key("user_id") references "users"("id") on delete cascade, foreign key("stage_id") references "projects_task_stages"("id") on delete set null);

CREATE TABLE "projects_task_tag" ("tag_id" integer not null, "task_id" integer not null, foreign key("tag_id") references "projects_tags"("id") on delete cascade, foreign key("task_id") references "projects_tasks"("id") on delete cascade);

CREATE TABLE "analytic_records" ("id" integer primary key autoincrement not null, "type" varchar not null, "name" varchar, "date" date not null, "amount" numeric not null default ('0'), "unit_amount" numeric not null default ('0'), "user_id" integer, "partner_id" integer, "company_id" integer, "creator_id" integer, "created_at" datetime, "updated_at" datetime, "project_id" integer, "task_id" integer, foreign key("creator_id") references users("id") on delete set null on update no action, foreign key("company_id") references companies("id") on delete set null on update no action, foreign key("partner_id") references partners_partners("id") on delete set null on update no action, foreign key("user_id") references users("id") on delete set null on update no action, foreign key("project_id") references "projects_projects"("id") on delete set null, foreign key("task_id") references "projects_tasks"("id") on delete set null);

CREATE TABLE "purchases_order_groups" ("id" integer primary key autoincrement not null, "creator_id" integer, "created_at" datetime, "updated_at" datetime, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "purchases_requisitions" ("id" integer primary key autoincrement not null, "name" varchar not null, "type" varchar not null, "state" varchar not null, "reference" varchar, "starts_at" date, "ends_at" date, "description" text, "currency_id" integer not null, "partner_id" integer not null, "user_id" integer, "company_id" integer not null, "creator_id" integer, "deleted_at" datetime, "created_at" datetime, "updated_at" datetime, foreign key("currency_id") references "currencies"("id") on delete restrict, foreign key("partner_id") references "partners_partners"("id") on delete restrict, foreign key("user_id") references "users"("id") on delete set null, foreign key("company_id") references "companies"("id") on delete restrict, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "purchases_requisition_lines" ("id" integer primary key autoincrement not null, "qty" numeric default '0', "price_unit" numeric default '0', "requisition_id" integer not null, "product_id" integer not null, "uom_id" integer, "company_id" integer, "creator_id" integer, "created_at" datetime, "updated_at" datetime, foreign key("requisition_id") references "purchases_requisitions"("id") on delete cascade, foreign key("product_id") references "products_products"("id") on delete restrict, foreign key("uom_id") references "unit_of_measures"("id") on delete set null, foreign key("company_id") references "companies"("id") on delete set null, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "purchases_order_line_taxes" ("order_line_id" integer not null, "tax_id" integer not null, foreign key("order_line_id") references "purchases_order_lines"("id") on delete cascade, foreign key("tax_id") references "accounts_taxes"("id") on delete cascade);

CREATE TABLE "purchases_order_account_moves" ("order_id" integer not null, "move_id" integer not null, foreign key("order_id") references "purchases_orders"("id") on delete cascade, foreign key("move_id") references "accounts_account_moves"("id") on delete cascade);

CREATE TABLE "accounts_account_move_lines" ("id" integer primary key autoincrement not null, "sort" integer, "move_id" integer not null, "journal_id" integer, "company_id" integer, "company_currency_id" integer, "reconcile_id" integer, "payment_id" integer, "tax_repartition_line_id" integer, "account_id" integer, "currency_id" integer not null, "partner_id" integer, "group_tax_id" integer, "tax_line_id" integer, "tax_group_id" integer, "statement_id" integer, "statement_line_id" integer, "product_id" integer, "uom_id" integer, "created_by" integer, "move_name" varchar, "parent_state" varchar, "reference" varchar, "name" varchar, "matching_number" varchar, "display_type" varchar default ('product'), "date" date, "invoice_date" date, "date_maturity" date, "discount_date" date, "analytic_distribution" text, "debit" numeric, "credit" numeric, "balance" numeric, "amount_currency" numeric, "tax_base_amount" numeric, "amount_residual" numeric, "amount_residual_currency" numeric, "quantity" numeric, "price_unit" numeric, "price_subtotal" numeric, "price_total" numeric, "discount" numeric, "discount_amount_currency" numeric, "discount_balance" numeric, "is_imported" tinyint(1) not null default ('0'), "tax_tag_invert" tinyint(1) not null default ('0'), "reconciled" tinyint(1) not null default ('0'), "is_downpayment" tinyint(1) not null default ('0'), "created_at" datetime, "updated_at" datetime, "full_reconcile_id" integer, "purchase_order_line_id" integer, foreign key("created_by") references users("id") on delete set null on update no action, foreign key("uom_id") references unit_of_measures("id") on delete restrict on update no action, foreign key("product_id") references products_products("id") on delete restrict on update no action, foreign key("statement_line_id") references accounts_bank_statement_lines("id") on delete set null on update no action, foreign key("statement_id") references accounts_bank_statements("id") on delete set null on update no action, foreign key("tax_group_id") references accounts_tax_groups("id") on delete set null on update no action, foreign key("tax_line_id") references accounts_taxes("id") on delete restrict on update no action, foreign key("group_tax_id") references accounts_taxes("id") on delete set null on update no action, foreign key("partner_id") references partners_partners("id") on delete restrict on update no action, foreign key("currency_id") references currencies("id") on delete restrict on update no action, foreign key("account_id") references accounts_accounts("id") on delete cascade on update no action, foreign key("tax_repartition_line_id") references accounts_tax_partition_lines("id") on delete restrict on update no action, foreign key("payment_id") references accounts_account_payments("id") on delete set null on update no action, foreign key("reconcile_id") references accounts_reconciles("id") on delete set null on update no action, foreign key("company_currency_id") references currencies("id") on delete set null on update no action, foreign key("company_id") references companies("id") on delete set null on update no action, foreign key("journal_id") references accounts_journals("id") on delete set null on update no action, foreign key("move_id") references accounts_account_moves("id") on delete cascade on update no action, foreign key("full_reconcile_id") references accounts_full_reconciles("id") on delete set null on update no action, foreign key("purchase_order_line_id") references "purchases_order_lines"("id") on delete set null);

CREATE TABLE "purchases_orders" ("id" integer primary key autoincrement not null, "name" varchar not null, "description" text, "priority" varchar not null default ('0'), "origin" varchar, "partner_reference" varchar, "state" varchar, "invoice_status" varchar not null default ('no'), "receipt_status" varchar not null default ('no'), "untaxed_amount" numeric not null default ('0'), "tax_amount" numeric not null default ('0'), "total_amount" numeric not null default ('0'), "total_cc_amount" numeric not null default ('0'), "currency_rate" numeric not null default ('0'), "invoice_count" integer not null default ('0'), "ordered_at" datetime not null, "approved_at" datetime, "planned_at" datetime, "calendar_start_at" datetime, "effective_date" datetime, "incoterm_location" varchar, "mail_reminder_confirmed" tinyint(1) default ('0'), "mail_reception_confirmed" tinyint(1) default ('0'), "mail_reception_declined" tinyint(1) default ('0'), "report_grids" tinyint(1) default ('0'), "requisition_id" integer, "purchases_group_id" integer, "partner_id" integer not null, "currency_id" integer not null, "fiscal_position_id" integer, "payment_term_id" integer, "incoterm_id" integer, "user_id" integer, "company_id" integer not null, "creator_id" integer, "created_at" datetime, "updated_at" datetime, "operation_type_id" integer, foreign key("creator_id") references users("id") on delete set null on update no action, foreign key("company_id") references companies("id") on delete restrict on update no action, foreign key("user_id") references users("id") on delete set null on update no action, foreign key("incoterm_id") references accounts_incoterms("id") on delete set null on update no action, foreign key("payment_term_id") references accounts_payment_terms("id") on delete set null on update no action, foreign key("fiscal_position_id") references accounts_fiscal_positions("id") on delete set null on update no action, foreign key("currency_id") references currencies("id") on delete restrict on update no action, foreign key("partner_id") references partners_partners("id") on delete restrict on update no action, foreign key("purchases_group_id") references purchases_order_groups("id") on delete set null on update no action, foreign key("requisition_id") references purchases_requisitions("id") on delete set null on update no action, foreign key("operation_type_id") references "inventories_operation_types"("id") on delete restrict);

CREATE TABLE "purchases_order_lines" ("id" integer primary key autoincrement not null, "name" text not null, "state" varchar, "sort" integer, "qty_received_method" varchar, "display_type" varchar, "product_qty" numeric not null, "product_uom_qty" double, "product_packaging_qty" double, "price_tax" double, "discount" numeric not null default ('0'), "price_unit" numeric not null default ('0'), "price_subtotal" numeric not null default ('0'), "price_total" numeric not null default ('0'), "qty_invoiced" numeric not null default ('0'), "qty_received" numeric not null default ('0'), "qty_received_manual" numeric not null default ('0'), "qty_to_invoice" numeric not null default ('0'), "is_downpayment" tinyint(1) not null default ('0'), "planned_at" datetime, "product_description_variants" varchar, "propagate_cancel" tinyint(1), "price_total_cc" numeric not null default ('0'), "uom_id" integer, "product_id" integer, "product_packaging_id" integer, "order_id" integer not null, "partner_id" integer, "currency_id" integer, "company_id" integer, "creator_id" integer, "created_at" datetime, "updated_at" datetime, "final_location_id" integer, "order_point_id" integer, foreign key("creator_id") references users("id") on delete set null on update no action, foreign key("company_id") references companies("id") on delete set null on update no action, foreign key("currency_id") references currencies("id") on delete set null on update no action, foreign key("partner_id") references partners_partners("id") on delete set null on update no action, foreign key("order_id") references purchases_orders("id") on delete cascade on update no action, foreign key("product_packaging_id") references products_packagings("id") on delete set null on update no action, foreign key("product_id") references products_products("id") on delete set null on update no action, foreign key("uom_id") references unit_of_measures("id") on delete set null on update no action, foreign key("final_location_id") references "inventories_locations"("id") on delete restrict, foreign key("order_point_id") references "inventories_order_points"("id") on delete restrict);

CREATE TABLE "purchases_order_operations" ("purchase_order_id" integer not null, "inventory_operation_id" integer not null, foreign key("purchase_order_id") references "purchases_orders"("id") on delete cascade, foreign key("inventory_operation_id") references "inventories_operations"("id") on delete cascade);

CREATE TABLE "recruitments_stages" ("id" integer primary key autoincrement not null, "sort" integer, "creator_id" integer, "name" varchar not null, "legend_blocked" varchar not null, "legend_done" varchar not null, "legend_normal" varchar not null, "requirements" text, "hired_stage" varchar, "fold" tinyint(1) not null default '0', "created_at" datetime, "updated_at" datetime, "is_default" tinyint(1) not null default '0', foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "recruitments_stages_jobs" ("stage_id" integer, "job_id" integer, foreign key("stage_id") references "recruitments_stages"("id") on delete cascade, foreign key("job_id") references "employees_job_positions"("id") on delete cascade);

CREATE TABLE "recruitments_degrees" ("id" integer primary key autoincrement not null, "creator_id" integer, "sort" integer default '0', "name" varchar not null, "created_at" datetime, "updated_at" datetime, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "recruitments_refuse_reasons" ("id" integer primary key autoincrement not null, "creator_id" integer, "sort" integer not null default '0', "name" varchar not null, "template" varchar, "is_active" tinyint(1) not null default '1', "created_at" datetime, "updated_at" datetime, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "recruitments_applicant_categories" ("id" integer primary key autoincrement not null, "creator_id" integer, "name" varchar not null, "color" varchar, "created_at" datetime, "updated_at" datetime, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "recruitments_candidates" ("id" integer primary key autoincrement not null, "message_bounced" integer default '0', "company_id" integer, "partner_id" integer, "degree_id" integer, "manager_id" integer, "employee_id" integer, "creator_id" integer, "email_cc" varchar, "name" varchar, "email_from" varchar, "phone" varchar, "linkedin_profile" varchar, "priority" integer default '0', "availability_date" date, "candidate_properties" text, "is_active" tinyint(1) default '1', "color" varchar, "deleted_at" datetime, "created_at" datetime, "updated_at" datetime, foreign key("company_id") references "companies"("id") on delete set null, foreign key("partner_id") references "partners_partners"("id") on delete set null, foreign key("degree_id") references "recruitments_degrees"("id") on delete set null, foreign key("manager_id") references "users"("id") on delete set null, foreign key("employee_id") references "employees_employees"("id") on delete set null, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "recruitments_candidate_applicant_categories" ("candidate_id" integer, "category_id" integer, foreign key("candidate_id") references "recruitments_candidates"("id") on delete cascade, foreign key("category_id") references "recruitments_applicant_categories"("id") on delete cascade);

CREATE TABLE "recruitments_candidate_skills" ("id" integer primary key autoincrement not null, "candidate_id" integer not null, "skill_id" integer not null, "skill_level_id" integer not null, "skill_type_id" integer not null, "creator_id" integer, "created_at" datetime, "updated_at" datetime, foreign key("candidate_id") references "recruitments_candidates"("id") on delete cascade, foreign key("skill_id") references "employees_skills"("id") on delete restrict, foreign key("skill_level_id") references "employees_skill_levels"("id") on delete restrict, foreign key("skill_type_id") references "employees_skill_types"("id") on delete restrict, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "recruitments_applicants" ("id" integer primary key autoincrement not null, "source_id" integer, "medium_id" integer, "candidate_id" integer not null, "stage_id" integer, "last_stage_id" integer, "company_id" integer, "recruiter_id" integer, "job_id" integer, "department_id" integer, "refuse_reason_id" integer, "creator_id" integer, "email_cc" varchar, "priority" varchar default '0', "salary_proposed_extra" varchar, "salary_expected_extra" varchar, "applicant_properties" text, "applicant_notes" text, "is_active" tinyint(1) not null default '0', "state" varchar, "create_date" datetime, "date_closed" datetime, "date_opened" datetime, "date_last_stage_updated" datetime, "refuse_date" datetime, "probability" numeric default '0', "salary_proposed" numeric default '0', "salary_expected" numeric default '0', "delay_close" numeric default '0', "deleted_at" datetime, "created_at" datetime, "updated_at" datetime, foreign key("source_id") references "utm_sources"("id") on delete set null, foreign key("medium_id") references "utm_mediums"("id") on delete set null, foreign key("candidate_id") references "recruitments_candidates"("id") on delete restrict, foreign key("stage_id") references "recruitments_stages"("id") on delete restrict, foreign key("last_stage_id") references "recruitments_stages"("id") on delete set null, foreign key("company_id") references "companies"("id") on delete set null, foreign key("recruiter_id") references "users"("id") on delete set null, foreign key("job_id") references "employees_job_positions"("id") on delete set null, foreign key("department_id") references "employees_departments"("id") on delete set null, foreign key("refuse_reason_id") references "recruitments_refuse_reasons"("id") on delete set null, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "recruitments_applicant_interviewers" ("applicant_id" integer not null, "interviewer_id" integer not null, foreign key("applicant_id") references "recruitments_applicants"("id") on delete cascade, foreign key("interviewer_id") references "users"("id") on delete cascade);

CREATE TABLE "recruitments_applicant_applicant_categories" ("applicant_id" integer, "category_id" integer, foreign key("applicant_id") references "recruitments_applicants"("id") on delete cascade, foreign key("category_id") references "recruitments_applicant_categories"("id") on delete cascade);

CREATE TABLE "employees_job_positions" ("id" integer primary key autoincrement not null, "sort" integer, "expected_employees" integer, "no_of_employee" integer, "no_of_recruitment" integer, "department_id" integer, "company_id" integer, "creator_id" integer, "employment_type_id" integer, "name" varchar not null, "description" text, "requirements" text, "is_active" tinyint(1) not null default ('0'), "deleted_at" datetime, "created_at" datetime, "updated_at" datetime, "address_id" integer, "manager_id" integer, "industry_id" integer, "recruiter_id" integer, "no_of_hired_employee" integer, "date_from" datetime, "date_to" datetime, foreign key("employment_type_id") references employees_employment_types("id") on delete set null on update no action, foreign key("company_id") references companies("id") on delete set null on update no action, foreign key("creator_id") references users("id") on delete set null on update no action, foreign key("department_id") references employees_departments("id") on delete set null on update no action, foreign key("address_id") references "partners_partners"("id") on delete set null, foreign key("manager_id") references "employees_employees"("id") on delete set null, foreign key("industry_id") references "partners_industries"("id") on delete set null, foreign key("recruiter_id") references "users"("id") on delete set null);

CREATE TABLE "recruitments_job_position_interviewers" ("job_position_id" integer not null, "user_id" integer not null, foreign key("job_position_id") references "employees_job_positions"("id") on delete cascade, foreign key("user_id") references "users"("id") on delete cascade);

CREATE TABLE "sales_teams" ("id" integer primary key autoincrement not null, "sort" integer default '0', "company_id" integer, "user_id" integer, "color" varchar, "creator_id" integer, "name" varchar not null, "is_active" tinyint(1) default '0', "invoiced_target" numeric default '0', "deleted_at" datetime, "created_at" datetime, "updated_at" datetime, foreign key("company_id") references "companies"("id") on delete set null, foreign key("user_id") references "users"("id") on delete set null, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "sales_team_members" ("team_id" integer not null, "user_id" integer not null, foreign key("team_id") references "sales_teams"("id") on delete cascade, foreign key("user_id") references "users"("id") on delete cascade);

CREATE TABLE "sales_order_templates" ("id" integer primary key autoincrement not null, "sort" integer default '0', "company_id" integer, "number_of_days" integer, "creator_id" integer, "name" varchar not null, "note" text, "journal_id" integer, "is_active" tinyint(1) default '0', "require_signature" tinyint(1) default '0', "require_payment" tinyint(1) default '0', "prepayment_percentage" numeric default '0', "created_at" datetime, "updated_at" datetime, foreign key("company_id") references "companies"("id") on delete set null, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "sales_order_template_products" ("id" integer primary key autoincrement not null, "sort" integer, "order_template_id" integer not null, "company_id" integer, "product_id" integer, "product_uom_id" integer, "creator_id" integer, "display_type" varchar, "name" varchar, "quantity" numeric not null default '0', "created_at" datetime, "updated_at" datetime, foreign key("order_template_id") references "sales_order_templates"("id") on delete cascade, foreign key("company_id") references "companies"("id") on delete set null, foreign key("product_id") references "products_products"("id") on delete set null, foreign key("product_uom_id") references "unit_of_measures"("id") on delete set null, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "sales_order_options" ("id" integer primary key autoincrement not null, "sort" integer default '0', "order_id" integer, "product_id" integer not null, "line_id" integer, "uom_id" integer, "creator_id" integer, "name" varchar not null, "quantity" numeric, "price_unit" numeric, "discount" numeric, "created_at" datetime, "updated_at" datetime, foreign key("order_id") references "sales_orders"("id") on delete cascade, foreign key("product_id") references "products_products"("id") on delete restrict, foreign key("line_id") references "sales_order_lines"("id") on delete set null, foreign key("uom_id") references "unit_of_measures"("id") on delete set null, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "sales_order_line_taxes" ("order_line_id" integer not null, "tax_id" integer not null, foreign key("order_line_id") references "sales_order_lines"("id") on delete cascade, foreign key("tax_id") references "accounts_taxes"("id") on delete cascade);

CREATE TABLE "sales_tags" ("id" integer primary key autoincrement not null, "creator_id" integer, "name" varchar not null, "color" varchar, "created_at" datetime, "updated_at" datetime, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "sales_order_line_invoices" ("order_line_id" integer not null, "invoice_line_id" integer not null, foreign key("order_line_id") references "sales_order_lines"("id") on delete cascade, foreign key("invoice_line_id") references "accounts_account_move_lines"("id") on delete cascade);

CREATE TABLE "sales_order_tags" ("order_id" integer, "tag_id" integer, foreign key("order_id") references "sales_orders"("id") on delete cascade, foreign key("tag_id") references "sales_tags"("id") on delete cascade);

CREATE TABLE "sales_advance_payment_invoices" ("id" integer primary key autoincrement not null, "currency_id" integer, "company_id" integer, "creator_id" integer, "advance_payment_method" varchar not null, "fixed_amount" numeric default '0', "amount" numeric default '0', "deduct_down_payments" tinyint(1) not null default '0', "consolidated_billing" tinyint(1) not null default '0', "created_at" datetime, "updated_at" datetime, foreign key("currency_id") references "currencies"("id") on delete set null, foreign key("company_id") references "companies"("id") on delete set null, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "sales_advance_payment_invoice_order_sales" ("advance_payment_invoice_id" integer not null, "order_id" integer not null, foreign key("advance_payment_invoice_id") references "sales_advance_payment_invoices"("id") on delete cascade, foreign key("order_id") references "sales_orders"("id") on delete cascade);

CREATE TABLE "sales_order_invoices" ("order_id" integer not null, "move_id" integer not null, foreign key("order_id") references "sales_orders"("id") on delete cascade, foreign key("move_id") references "accounts_account_moves"("id") on delete cascade);

CREATE TABLE "inventories_operations" ("id" integer primary key autoincrement not null, "name" varchar, "description" text, "origin" varchar, "move_type" varchar not null default ('direct'), "state" varchar, "is_favorite" tinyint(1) not null default ('0'), "has_deadline_issue" tinyint(1) not null default ('0'), "is_printed" tinyint(1) not null default ('0'), "is_locked" tinyint(1) not null default ('0'), "deadline" datetime, "scheduled_at" datetime, "closed_at" datetime, "user_id" integer, "owner_id" integer, "operation_type_id" integer not null, "source_location_id" integer not null, "destination_location_id" integer not null, "back_order_id" integer, "return_id" integer, "partner_id" integer, "company_id" integer, "creator_id" integer, "created_at" datetime, "updated_at" datetime, "sale_order_id" integer, foreign key("creator_id") references users("id") on delete set null on update no action, foreign key("company_id") references companies("id") on delete set null on update no action, foreign key("partner_id") references partners_partners("id") on delete set null on update no action, foreign key("return_id") references inventories_operations("id") on delete set null on update no action, foreign key("back_order_id") references inventories_operations("id") on delete set null on update no action, foreign key("destination_location_id") references inventories_locations("id") on delete restrict on update no action, foreign key("source_location_id") references inventories_locations("id") on delete restrict on update no action, foreign key("operation_type_id") references inventories_operation_types("id") on delete restrict on update no action, foreign key("owner_id") references users("id") on delete set null on update no action, foreign key("user_id") references users("id") on delete set null on update no action, foreign key("sale_order_id") references "sales_orders"("id") on delete restrict);

CREATE TABLE "inventories_moves" ("id" integer primary key autoincrement not null, "name" varchar not null, "state" varchar, "origin" varchar, "procure_method" varchar not null default ('make_to_stock'), "reference" varchar, "description_picking" text, "next_serial" varchar, "next_serial_count" integer, "is_favorite" tinyint(1) not null default ('0'), "product_qty" numeric default ('0'), "product_uom_qty" numeric default ('0'), "quantity" numeric default ('0'), "is_picked" tinyint(1) not null default ('0'), "is_scraped" tinyint(1) not null default ('0'), "is_inventory" tinyint(1) not null default ('0'), "reservation_date" date, "scheduled_at" datetime not null, "deadline" datetime, "alert_Date" datetime, "operation_id" integer, "product_id" integer not null, "uom_id" integer not null, "source_location_id" integer not null, "destination_location_id" integer not null, "final_location_id" integer, "partner_id" integer, "scrap_id" integer, "rule_id" integer, "operation_type_id" integer, "origin_returned_move_id" integer, "restrict_partner_id" integer, "warehouse_id" integer, "package_level_id" integer, "product_packaging_id" integer, "company_id" integer not null, "creator_id" integer, "created_at" datetime, "updated_at" datetime, "is_refund" tinyint(1) not null default ('0'), "purchase_order_line_id" integer, "sale_order_line_id" integer, foreign key("purchase_order_line_id") references purchases_order_lines("id") on delete restrict on update no action, foreign key("operation_id") references inventories_operations("id") on delete set null on update no action, foreign key("product_id") references products_products("id") on delete restrict on update no action, foreign key("uom_id") references unit_of_measures("id") on delete restrict on update no action, foreign key("source_location_id") references inventories_locations("id") on delete restrict on update no action, foreign key("destination_location_id") references inventories_locations("id") on delete restrict on update no action, foreign key("final_location_id") references inventories_locations("id") on delete set null on update no action, foreign key("partner_id") references partners_partners("id") on delete set null on update no action, foreign key("scrap_id") references inventories_scraps("id") on delete set null on update no action, foreign key("rule_id") references inventories_rules("id") on delete set null on update no action, foreign key("operation_type_id") references inventories_operation_types("id") on delete set null on update no action, foreign key("origin_returned_move_id") references inventories_moves("id") on delete set null on update no action, foreign key("restrict_partner_id") references partners_partners("id") on delete set null on update no action, foreign key("warehouse_id") references inventories_warehouses("id") on delete set null on update no action, foreign key("package_level_id") references inventories_package_levels("id") on delete set null on update no action, foreign key("product_packaging_id") references products_packagings("id") on delete set null on update no action, foreign key("company_id") references companies("id") on delete restrict on update no action, foreign key("creator_id") references users("id") on delete set null on update no action, foreign key("sale_order_line_id") references "sales_order_lines"("id") on delete restrict);

CREATE TABLE "sales_orders" ("id" integer primary key autoincrement not null, "utm_source_id" integer, "campaign_id" integer, "medium_id" integer, "company_id" integer not null, "partner_id" integer not null, "journal_id" integer, "partner_invoice_id" integer not null, "partner_shipping_id" integer not null, "fiscal_position_id" integer, "payment_term_id" integer, "currency_id" integer not null, "user_id" integer, "team_id" integer, "creator_id" integer, "sale_order_template_id" integer, "access_token" varchar, "name" varchar not null, "state" varchar, "client_order_ref" varchar, "origin" varchar, "reference" varchar, "signed_by" varchar, "invoice_status" varchar, "validity_date" date, "note" text, "currency_rate" numeric default ('0'), "amount_untaxed" numeric default ('0'), "amount_tax" numeric default ('0'), "amount_total" numeric default ('0'), "locked" tinyint(1) not null default ('0'), "require_signature" tinyint(1) not null default ('0'), "require_payment" tinyint(1) not null default ('0'), "commitment_date" date, "date_order" date not null, "signed_on" date, "prepayment_percent" numeric default ('0'), "deleted_at" datetime, "created_at" datetime, "updated_at" datetime, "delivery_status" varchar default ('no'), "warehouse_id" integer, foreign key("sale_order_template_id") references sales_order_templates("id") on delete set null on update no action, foreign key("creator_id") references users("id") on delete set null on update no action, foreign key("team_id") references sales_teams("id") on delete set null on update no action, foreign key("user_id") references users("id") on delete set null on update no action, foreign key("currency_id") references currencies("id") on delete restrict on update no action, foreign key("payment_term_id") references accounts_payment_terms("id") on delete set null on update no action, foreign key("fiscal_position_id") references accounts_fiscal_positions("id") on delete set null on update no action, foreign key("partner_shipping_id") references partners_partners("id") on delete restrict on update no action, foreign key("partner_invoice_id") references partners_partners("id") on delete restrict on update no action, foreign key("journal_id") references accounts_journals("id") on delete set null on update no action, foreign key("partner_id") references partners_partners("id") on delete restrict on update no action, foreign key("company_id") references companies("id") on delete restrict on update no action, foreign key("medium_id") references utm_mediums("id") on delete set null on update no action, foreign key("campaign_id") references utm_campaigns("id") on delete set null on update no action, foreign key("utm_source_id") references utm_sources("id") on delete set null on update no action, foreign key("warehouse_id") references "inventories_warehouses"("id") on delete set null);

CREATE TABLE "sales_order_lines" ("id" integer primary key autoincrement not null, "sort" integer, "order_id" integer not null, "company_id" integer, "currency_id" integer, "order_partner_id" integer, "salesman_id" integer, "product_id" integer, "product_uom_id" integer, "linked_sale_order_sale_id" integer, "product_packaging_id" integer, "creator_id" integer, "state" varchar, "display_type" varchar, "virtual_id" varchar, "linked_virtual_id" varchar, "qty_delivered_method" varchar, "invoice_status" varchar, "analytic_distribution" varchar, "name" varchar not null, "product_uom_qty" numeric not null default ('0'), "product_qty" numeric not null default ('0'), "price_unit" numeric not null default ('0'), "discount" numeric default ('0'), "price_subtotal" numeric default ('0'), "price_total" numeric default ('0'), "price_reduce_taxexcl" numeric default ('0'), "price_reduce_taxinc" numeric default ('0'), "purchase_price" numeric default ('0'), "margin" numeric default ('0'), "margin_percent" numeric default ('0'), "qty_delivered" numeric default ('0'), "qty_invoiced" numeric default ('0'), "qty_to_invoice" numeric default ('0'), "untaxed_amount_invoiced" numeric default ('0'), "untaxed_amount_to_invoice" numeric default ('0'), "is_downpayment" tinyint(1) default ('0'), "is_expense" tinyint(1) default ('0'), "create_date" datetime, "write_date" datetime, "technical_price_unit" numeric default ('0'), "price_tax" numeric default ('0'), "product_packaging_qty" numeric default ('0'), "customer_lead" numeric not null default ('0'), "created_at" datetime, "updated_at" datetime, "route_id" integer, "warehouse_id" integer, foreign key("creator_id") references users("id") on delete set null on update no action, foreign key("product_packaging_id") references products_packagings("id") on delete set null on update no action, foreign key("linked_sale_order_sale_id") references sales_order_lines("id") on delete set null on update no action, foreign key("product_uom_id") references unit_of_measures("id") on delete set null on update no action, foreign key("product_id") references products_products("id") on delete set null on update no action, foreign key("salesman_id") references users("id") on delete set null on update no action, foreign key("order_partner_id") references partners_partners("id") on delete set null on update no action, foreign key("currency_id") references currencies("id") on delete set null on update no action, foreign key("company_id") references companies("id") on delete set null on update no action, foreign key("order_id") references sales_orders("id") on delete cascade on update no action, foreign key("route_id") references "inventories_routes"("id") on delete restrict, foreign key("warehouse_id") references "inventories_warehouses"("id") on delete set null);

CREATE TABLE "time_off_leave_types" ("id" integer primary key autoincrement not null, "sort" integer, "color" varchar, "company_id" integer, "max_allowed_negative" integer, "creator_id" integer, "leave_validation_type" varchar check ("leave_validation_type" in ('no_validation', 'hr', 'manager', 'both')) default 'hr', "requires_allocation" varchar check ("requires_allocation" in ('yes', 'no')) not null default 'no', "employee_requests" varchar check ("employee_requests" in ('yes', 'no')) not null default 'no', "allocation_validation_type" varchar check ("allocation_validation_type" in ('no_validation', 'hr', 'manager', 'both')) default 'hr', "time_type" varchar check ("time_type" in ('leave', 'other')) default 'leave', "request_unit" varchar check ("request_unit" in ('day', 'half_day', 'hour')) not null default 'day', "name" varchar not null, "create_calendar_meeting" tinyint(1), "is_active" tinyint(1), "show_on_dashboard" tinyint(1), "unpaid" tinyint(1), "include_public_holidays_in_duration" tinyint(1), "support_document" tinyint(1), "allows_negative" tinyint(1), "deleted_at" datetime, "created_at" datetime, "updated_at" datetime, foreign key("company_id") references "companies"("id") on delete set null, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "time_off_leaves" ("id" integer primary key autoincrement not null, "user_id" integer, "manager_id" integer, "holiday_status_id" integer, "employee_id" integer not null, "employee_company_id" integer, "company_id" integer, "department_id" integer, "calendar_id" integer, "meeting_id" integer, "first_approver_id" integer, "second_approver_id" integer, "creator_id" integer, "private_name" varchar, "state" varchar, "duration_display" varchar, "request_date_from_period" varchar, "request_date_from" datetime, "request_date_to" datetime, "notes" text, "attachment" varchar, "request_unit_half" tinyint(1), "request_unit_hours" tinyint(1), "date_from" datetime, "date_to" datetime, "number_of_days" numeric default '0', "number_of_hours" numeric default '0', "request_hour_from" numeric default '0', "request_hour_to" numeric default '0', "created_at" datetime, "updated_at" datetime, foreign key("user_id") references "users"("id") on delete set null, foreign key("manager_id") references "employees_employees"("id") on delete set null, foreign key("holiday_status_id") references "time_off_leave_types"("id") on delete restrict, foreign key("employee_id") references "employees_employees"("id") on delete restrict, foreign key("employee_company_id") references "companies"("id") on delete set null, foreign key("company_id") references "companies"("id") on delete set null, foreign key("department_id") references "employees_departments"("id") on delete set null, foreign key("calendar_id") references "employees_calendars"("id") on delete set null, foreign key("first_approver_id") references "employees_employees"("id") on delete set null, foreign key("second_approver_id") references "employees_employees"("id") on delete set null, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "time_off_user_leave_types" ("user_id" integer not null, "leave_type_id" integer not null, foreign key("user_id") references "users"("id") on delete cascade, foreign key("leave_type_id") references "time_off_leave_types"("id") on delete cascade);

CREATE TABLE "time_off_leave_mandatory_days" ("id" integer primary key autoincrement not null, "company_id" integer, "creator_id" integer, "color" varchar, "name" varchar not null, "start_date" datetime not null, "end_date" datetime not null, "created_at" datetime, "updated_at" datetime, foreign key("company_id") references "companies"("id") on delete restrict, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "time_off_leave_accrual_plans" ("id" integer primary key autoincrement not null, "time_off_type_id" integer, "company_id" integer, "carryover_day" integer, "creator_id" integer, "name" varchar not null, "transition_mode" varchar check ("transition_mode" in ('immediately', 'end_of_accrual')) not null default 'immediately', "accrued_gain_time" varchar check ("accrued_gain_time" in ('start', 'end')) not null default 'end', "carryover_date" varchar check ("carryover_date" in ('year_start', 'allocation', 'other')) not null default 'year_start', "carryover_month" varchar check ("carryover_month" in ('jan', 'feb', 'mar', 'apr', 'may', 'jun', 'jul', 'aug', 'sep', 'oct', 'nov', 'dec')) not null default 'jan', "added_value_type" varchar, "is_active" tinyint(1), "is_based_on_worked_time" tinyint(1), "created_at" datetime, "updated_at" datetime, foreign key("time_off_type_id") references "time_off_leave_types"("id") on delete cascade, foreign key("company_id") references "companies"("id") on delete cascade, foreign key("creator_id") references "users"("id") on delete cascade);

CREATE TABLE "time_off_leave_accrual_levels" ("id" integer primary key autoincrement not null, "sort" integer, "accrual_plan_id" integer not null, "start_count" integer, "first_day" integer, "second_day" integer, "first_month_day" integer, "second_month_day" integer, "yearly_day" integer, "postpone_max_days" integer, "accrual_validity_count" integer, "creator_id" integer, "start_type" varchar check ("start_type" in ('months', 'days', 'years')) not null default 'days', "added_value_type" varchar check ("added_value_type" in ('days', 'hours')) not null default 'days', "frequency" varchar check ("frequency" in ('hourly', 'daily', 'weekly', 'bimonthly', 'monthly', 'biyearly', 'yearly')) not null default 'daily', "week_day" varchar check ("week_day" in ('sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday')), "first_month" varchar, "second_month" varchar, "yearly_month" varchar, "action_with_unused_accruals" varchar check ("action_with_unused_accruals" in ('lost', 'all', 'maximum')) not null default 'lost', "accrual_validity_type" varchar check ("accrual_validity_type" in ('days', 'months')) default 'days', "added_value" integer not null, "maximum_leave" integer, "maximum_leave_yearly" integer, "cap_accrued_time" tinyint(1), "cap_accrued_time_yearly" tinyint(1), "accrual_validity" tinyint(1), "created_at" datetime, "updated_at" datetime, foreign key("accrual_plan_id") references "time_off_leave_accrual_plans"("id") on delete cascade, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "time_off_leave_allocations" ("id" integer primary key autoincrement not null, "holiday_status_id" integer not null, "employee_id" integer not null, "employee_company_id" integer, "manager_id" integer, "approver_id" integer, "second_approver_id" integer, "department_id" integer, "accrual_plan_id" integer, "creator_id" integer, "name" varchar, "state" varchar check ("state" in ('confirm', 'refuse', 'validate_one', 'validate_two')) default 'confirm', "allocation_type" varchar check ("allocation_type" in ('regular', 'accrual')) default 'regular', "date_from" datetime not null, "date_to" datetime, "last_executed_carryover_date" datetime, "last_called" datetime, "actual_last_called" datetime, "next_call" datetime, "carried_over_days_expiration_date" datetime, "notes" text, "already_accrued" tinyint(1), "number_of_days" numeric default '0', "number_of_hours_display" numeric default '0', "yearly_accrued_amount" numeric default '0', "expiring_carryover_days" numeric default '0', "created_at" datetime, "updated_at" datetime, foreign key("holiday_status_id") references "time_off_leave_types"("id") on delete restrict, foreign key("employee_id") references "employees_employees"("id") on delete restrict, foreign key("employee_company_id") references "companies"("id") on delete set null, foreign key("manager_id") references "employees_employees"("id") on delete set null, foreign key("approver_id") references "employees_employees"("id") on delete set null, foreign key("second_approver_id") references "employees_employees"("id") on delete set null, foreign key("department_id") references "employees_departments"("id") on delete set null, foreign key("accrual_plan_id") references "time_off_leave_accrual_plans"("id") on delete set null, foreign key("creator_id") references "users"("id") on delete set null);

CREATE TABLE "website_pages" ("id" integer primary key autoincrement not null, "title" varchar not null, "content" text not null, "slug" varchar not null, "is_published" tinyint(1) not null default '0', "is_header_visible" tinyint(1) not null default '0', "is_footer_visible" tinyint(1) not null default '0', "published_at" datetime, "meta_title" varchar, "meta_keywords" varchar, "meta_description" text, "creator_id" integer, "deleted_at" datetime, "created_at" datetime, "updated_at" datetime, foreign key("creator_id") references "users"("id") on delete set null);

CREATE INDEX "sessions_user_id_index" on "sessions" ("user_id");

CREATE INDEX "sessions_last_activity_index" on "sessions" ("last_activity");

CREATE INDEX "jobs_queue_index" on "jobs" ("queue");

CREATE UNIQUE INDEX "failed_jobs_uuid_unique" on "failed_jobs" ("uuid");

CREATE UNIQUE INDEX "settings_group_name_unique" on "settings" ("group", "name");

CREATE UNIQUE INDEX "permissions_name_guard_name_unique" on "permissions" ("name", "guard_name");

CREATE UNIQUE INDEX "roles_name_guard_name_unique" on "roles" ("name", "guard_name");

CREATE INDEX "model_has_permissions_model_id_model_type_index" on "model_has_permissions" ("model_id", "model_type");

CREATE INDEX "model_has_roles_model_id_model_type_index" on "model_has_roles" ("model_id", "model_type");

CREATE UNIQUE INDEX "plugins_name_unique" on "plugins" ("name");

CREATE UNIQUE INDEX "plugin_dependencies_plugin_id_dependency_id_unique" on "plugin_dependencies" ("plugin_id", "dependency_id");

CREATE UNIQUE INDEX "custom_fields_code_customizable_type_unique" on "custom_fields" ("code", "customizable_type");

CREATE INDEX "custom_fields_code_index" on "custom_fields" ("code");

CREATE INDEX "custom_fields_sort_index" on "custom_fields" ("sort");

CREATE UNIQUE INDEX "tbl_view_fav_unique" on "table_view_favorites" ("view_type", "view_key", "filterable_type", "user_id");

CREATE INDEX "chatter_followers_followable_type_followable_id_index" on "chatter_followers" ("followable_type", "followable_id");

CREATE UNIQUE INDEX "chatter_followers_unique" on "chatter_followers" ("followable_type", "followable_id", "partner_id");

CREATE UNIQUE INDEX "partners_bank_accounts_account_number_unique" on "partners_bank_accounts" ("account_number");

CREATE UNIQUE INDEX "partners_tags_name_unique" on "partners_tags" ("name");

CREATE UNIQUE INDEX "users_email_unique" on "users" ("email");

CREATE INDEX "chatter_messages_messageable_type_messageable_id_index" on "chatter_messages" ("messageable_type", "messageable_id");

CREATE INDEX "chatter_messages_causer_type_causer_id_index" on "chatter_messages" ("causer_type", "causer_id");

CREATE INDEX "chatter_attachments_messageable_type_messageable_id_index" on "chatter_attachments" ("messageable_type", "messageable_id");

CREATE UNIQUE INDEX "companies_company_id_unique" on "companies" ("company_id");

CREATE UNIQUE INDEX "companies_tax_id_unique" on "companies" ("tax_id");

CREATE INDEX "pages_title_index" on "pages" ("title");

CREATE INDEX "pages_layout_index" on "pages" ("layout");

CREATE UNIQUE INDEX "pages_slug_parent_id_unique" on "pages" ("slug", "parent_id");

CREATE INDEX "products_categories_name_index" on "products_categories" ("name");

CREATE UNIQUE INDEX "products_tags_name_unique" on "products_tags" ("name");

CREATE INDEX "partners_partners_company_registry_index" on "partners_partners" ("company_registry");

CREATE INDEX "partners_partners_mobile_index" on "partners_partners" ("mobile");

CREATE INDEX "partners_partners_name_index" on "partners_partners" ("name");

CREATE INDEX "partners_partners_phone_index" on "partners_partners" ("phone");

CREATE INDEX "partners_partners_reference_index" on "partners_partners" ("reference");

CREATE INDEX "partners_partners_sub_type_index" on "partners_partners" ("sub_type");

CREATE INDEX "partners_partners_tax_id_index" on "partners_partners" ("tax_id");

CREATE UNIQUE INDEX "employees_categories_name_unique" on "employees_categories" ("name");

CREATE INDEX "employees_skill_levels_skill_type_id_index" on "employees_skill_levels" ("skill_type_id");

CREATE INDEX "employees_skill_levels_creator_id_index" on "employees_skill_levels" ("creator_id");

CREATE INDEX "employees_skills_skill_type_id_index" on "employees_skills" ("skill_type_id");

CREATE INDEX "employees_skills_creator_id_index" on "employees_skills" ("creator_id");

CREATE UNIQUE INDEX "inventories_tags_name_unique" on "inventories_tags" ("name");

CREATE UNIQUE INDEX "inventories_locations_company_id_barcode_unique" on "inventories_locations" ("company_id", "barcode");

CREATE INDEX "inventories_rules_action_index" on "inventories_rules" ("action");

CREATE UNIQUE INDEX "inventories_warehouses_company_id_code_unique" on "inventories_warehouses" ("company_id", "code");

CREATE UNIQUE INDEX "inventories_warehouses_company_id_name_unique" on "inventories_warehouses" ("company_id", "name");

CREATE INDEX "inventories_warehouses_name_index" on "inventories_warehouses" ("name");

CREATE UNIQUE INDEX "inventories_package_types_barcode_unique" on "inventories_package_types" ("barcode");

CREATE UNIQUE INDEX "unique_product_storage_category" on "inventories_storage_category_capacities" ("product_id", "storage_category_id");

CREATE UNIQUE INDEX "unique_package_type_storage_category" on "inventories_storage_category_capacities" ("package_type_id", "storage_category_id");

CREATE INDEX "inventories_lots_name_index" on "inventories_lots" ("name");

CREATE INDEX "projects_projects_name_index" on "projects_projects" ("name");

CREATE INDEX "projects_projects_sort_index" on "projects_projects" ("sort");

CREATE INDEX "projects_milestones_name_index" on "projects_milestones" ("name");

CREATE INDEX "projects_milestones_deadline_index" on "projects_milestones" ("deadline");

CREATE INDEX "projects_milestones_completed_at_index" on "projects_milestones" ("completed_at");

CREATE UNIQUE INDEX "projects_tags_name_unique" on "projects_tags" ("name");

CREATE INDEX "projects_tasks_title_index" on "projects_tasks" ("title");

CREATE INDEX "projects_tasks_priority_index" on "projects_tasks" ("priority");

CREATE INDEX "projects_tasks_state_index" on "projects_tasks" ("state");

CREATE INDEX "projects_tasks_deadline_index" on "projects_tasks" ("deadline");

CREATE UNIQUE INDEX "projects_task_users_task_id_user_id_unique" on "projects_task_users" ("task_id", "user_id");

CREATE INDEX "purchases_orders_approved_at_index" on "purchases_orders" ("approved_at");

CREATE INDEX "purchases_orders_company_id_index" on "purchases_orders" ("company_id");

CREATE INDEX "purchases_orders_name_index" on "purchases_orders" ("name");

CREATE INDEX "purchases_orders_ordered_at_index" on "purchases_orders" ("ordered_at");

CREATE INDEX "purchases_orders_planned_at_index" on "purchases_orders" ("planned_at");

CREATE INDEX "purchases_orders_priority_index" on "purchases_orders" ("priority");

CREATE INDEX "purchases_orders_state_index" on "purchases_orders" ("state");

CREATE INDEX "purchases_orders_user_id_index" on "purchases_orders" ("user_id");

CREATE INDEX "purchases_order_lines_order_id_index" on "purchases_order_lines" ("order_id");

CREATE INDEX "purchases_order_lines_partner_id_index" on "purchases_order_lines" ("partner_id");

CREATE INDEX "purchases_order_lines_planned_at_index" on "purchases_order_lines" ("planned_at");

CREATE INDEX "purchases_order_lines_product_id_index" on "purchases_order_lines" ("product_id");

CREATE UNIQUE INDEX "website_pages_slug_unique" on "website_pages" ("slug");

